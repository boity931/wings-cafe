{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [salesData, setSalesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingStock, setEditingStock] = useState({}); // { productId: newStockValue }\n  const [sellQuantities, setSellQuantities] = useState({}); // { productId: sellQty }\n  const [receipt, setReceipt] = useState(null);\n\n  // Fetch products and sales\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const [productsRes, salesRes] = await Promise.all([api.get('/products'), api.get('/sales')]);\n      setProducts(productsRes.data || []);\n      setSalesData(salesRes.data || []);\n    } catch (err) {\n      console.error('Fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Calculate sold quantity per product\n  const getSoldQuantity = productId => salesData.filter(sale => sale.productId === productId).reduce((sum, sale) => sum + Number(sale.quantity || 0), 0);\n\n  // Calculate available stock per product\n  const getAvailableStock = product => product.stock - getSoldQuantity(product.id);\n\n  // Handle stock input editing\n  const onStockChange = (productId, value) => {\n    if (value === '' || /^\\d+$/.test(value)) {\n      setEditingStock(prev => ({\n        ...prev,\n        [productId]: value\n      }));\n    }\n  };\n\n  // Save updated stock\n  const saveStock = async productId => {\n    const newStockStr = editingStock[productId];\n    if (newStockStr === undefined) return;\n    const newStock = parseInt(newStockStr, 10);\n    if (isNaN(newStock) || newStock < 0) {\n      alert('Invalid stock quantity');\n      return;\n    }\n    try {\n      await api.put(`/products/${productId}`, {\n        stock: newStock\n      });\n      setEditingStock(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[productId];\n        return copy;\n      });\n      await fetchData();\n    } catch (err) {\n      console.error('Failed to update stock:', err);\n      alert('Could not update stock');\n    }\n  };\n\n  // Handle sell quantity input\n  const onSellQuantityChange = (productId, value) => {\n    const product = products.find(p => p.id === productId);\n    if (!product) return;\n    const availableStock = getAvailableStock(product);\n    let val = parseInt(value, 10);\n    if (isNaN(val) || val < 1) val = 1;\n    if (val > availableStock) val = availableStock;\n    setSellQuantities(prev => ({\n      ...prev,\n      [productId]: val\n    }));\n  };\n\n  // Sell product handler\n  const sellProduct = async product => {\n    const quantity = sellQuantities[product.id] || 1;\n    const availableStock = getAvailableStock(product);\n    if (quantity < 1 || quantity > availableStock) {\n      return alert('Invalid quantity or insufficient stock');\n    }\n    const sale = {\n      productId: product.id,\n      name: product.name,\n      quantity,\n      amount: product.price * quantity,\n      date: new Date().toISOString().split('T')[0]\n    };\n    try {\n      await api.post('/sales', sale);\n      setReceipt(sale);\n      setSellQuantities(prev => ({\n        ...prev,\n        [product.id]: 1\n      }));\n      await fetchData();\n    } catch (err) {\n      console.error('Failed to record sale:', err);\n      alert('Sale failed');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading products...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-cards-container\",\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: 20\n    },\n    children: [products.map(product => {\n      const availableStock = getAvailableStock(product);\n      const editingValue = editingStock[product.id];\n      const sellQty = sellQuantities[product.id] || 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          borderRadius: 8,\n          padding: 16,\n          width: 280,\n          boxShadow: availableStock === 0 ? '0 0 10px #f44336' : '0 0 5px #4caf50',\n          position: 'relative',\n          background: '#fff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 16\n          }, this), \" M\", product.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Stock: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingValue !== undefined ? editingValue : product.stock,\n            onChange: e => onStockChange(product.id, e.target.value),\n            style: {\n              width: 60\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => saveStock(product.id),\n            disabled: editingValue === undefined || editingValue === String(product.stock),\n            style: {\n              marginLeft: 8\n            },\n            children: \"Update Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Available:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 16\n          }, this), \" \", availableStock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Quantity to Sell:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: 1,\n              max: availableStock,\n              value: sellQty,\n              onChange: e => onSellQuantityChange(product.id, e.target.value),\n              disabled: availableStock === 0,\n              style: {\n                width: 60,\n                marginLeft: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sellProduct(product),\n            disabled: availableStock === 0,\n            style: {\n              marginLeft: 10\n            },\n            children: \"Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), availableStock === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#f44336',\n            fontWeight: 'bold',\n            position: 'absolute',\n            top: 10,\n            right: 10\n          },\n          children: \"Out of Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this);\n    }), receipt && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: 20,\n        right: 20,\n        background: '#fff',\n        padding: 20,\n        border: '1px solid #ddd',\n        boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n        borderRadius: 8,\n        maxWidth: 320,\n        zIndex: 9999\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Sale Receipt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 14\n        }, this), \" \", new Date(receipt.date).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Product:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 14\n        }, this), \" \", receipt.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 14\n        }, this), \" \", receipt.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 14\n        }, this), \" M\", receipt.amount.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setReceipt(null),\n        style: {\n          marginTop: 10\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"cbfgFiEguWspdoAne/2hkIfneI0=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Sales","_s","products","setProducts","salesData","setSalesData","loading","setLoading","editingStock","setEditingStock","sellQuantities","setSellQuantities","receipt","setReceipt","fetchData","productsRes","salesRes","Promise","all","get","data","err","console","error","getSoldQuantity","productId","filter","sale","reduce","sum","Number","quantity","getAvailableStock","product","stock","id","onStockChange","value","test","prev","saveStock","newStockStr","undefined","newStock","parseInt","isNaN","alert","put","copy","onSellQuantityChange","find","p","availableStock","val","sellProduct","name","amount","price","date","Date","toISOString","split","post","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","flexWrap","gap","map","editingValue","sellQty","border","borderRadius","padding","width","boxShadow","position","background","toFixed","type","onChange","e","target","onClick","disabled","String","marginLeft","marginTop","min","max","color","fontWeight","top","right","bottom","maxWidth","zIndex","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Sales() {\r\n  const [products, setProducts] = useState([]);\r\n  const [salesData, setSalesData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editingStock, setEditingStock] = useState({});  // { productId: newStockValue }\r\n  const [sellQuantities, setSellQuantities] = useState({}); // { productId: sellQty }\r\n  const [receipt, setReceipt] = useState(null);\r\n\r\n  // Fetch products and sales\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [productsRes, salesRes] = await Promise.all([\r\n        api.get('/products'),\r\n        api.get('/sales'),\r\n      ]);\r\n      setProducts(productsRes.data || []);\r\n      setSalesData(salesRes.data || []);\r\n    } catch (err) {\r\n      console.error('Fetch error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Calculate sold quantity per product\r\n  const getSoldQuantity = (productId) =>\r\n    salesData\r\n      .filter(sale => sale.productId === productId)\r\n      .reduce((sum, sale) => sum + Number(sale.quantity || 0), 0);\r\n\r\n  // Calculate available stock per product\r\n  const getAvailableStock = (product) => product.stock - getSoldQuantity(product.id);\r\n\r\n  // Handle stock input editing\r\n  const onStockChange = (productId, value) => {\r\n    if (value === '' || /^\\d+$/.test(value)) {\r\n      setEditingStock(prev => ({ ...prev, [productId]: value }));\r\n    }\r\n  };\r\n\r\n  // Save updated stock\r\n  const saveStock = async (productId) => {\r\n    const newStockStr = editingStock[productId];\r\n    if (newStockStr === undefined) return;\r\n\r\n    const newStock = parseInt(newStockStr, 10);\r\n    if (isNaN(newStock) || newStock < 0) {\r\n      alert('Invalid stock quantity');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await api.put(`/products/${productId}`, { stock: newStock });\r\n      setEditingStock(prev => {\r\n        const copy = { ...prev };\r\n        delete copy[productId];\r\n        return copy;\r\n      });\r\n      await fetchData();\r\n    } catch (err) {\r\n      console.error('Failed to update stock:', err);\r\n      alert('Could not update stock');\r\n    }\r\n  };\r\n\r\n  // Handle sell quantity input\r\n  const onSellQuantityChange = (productId, value) => {\r\n    const product = products.find(p => p.id === productId);\r\n    if (!product) return;\r\n\r\n    const availableStock = getAvailableStock(product);\r\n    let val = parseInt(value, 10);\r\n    if (isNaN(val) || val < 1) val = 1;\r\n    if (val > availableStock) val = availableStock;\r\n    setSellQuantities(prev => ({ ...prev, [productId]: val }));\r\n  };\r\n\r\n  // Sell product handler\r\n  const sellProduct = async (product) => {\r\n    const quantity = sellQuantities[product.id] || 1;\r\n    const availableStock = getAvailableStock(product);\r\n    if (quantity < 1 || quantity > availableStock) {\r\n      return alert('Invalid quantity or insufficient stock');\r\n    }\r\n\r\n    const sale = {\r\n      productId: product.id,\r\n      name: product.name,\r\n      quantity,\r\n      amount: product.price * quantity,\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n\r\n    try {\r\n      await api.post('/sales', sale);\r\n      setReceipt(sale);\r\n      setSellQuantities(prev => ({ ...prev, [product.id]: 1 }));\r\n      await fetchData();\r\n    } catch (err) {\r\n      console.error('Failed to record sale:', err);\r\n      alert('Sale failed');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading products...</div>;\r\n\r\n  return (\r\n    <div className=\"product-cards-container\" style={{ display: 'flex', flexWrap: 'wrap', gap: 20 }}>\r\n      {products.map(product => {\r\n        const availableStock = getAvailableStock(product);\r\n        const editingValue = editingStock[product.id];\r\n        const sellQty = sellQuantities[product.id] || 1;\r\n\r\n        return (\r\n          <div key={product.id} style={{\r\n            border: '1px solid #ccc',\r\n            borderRadius: 8,\r\n            padding: 16,\r\n            width: 280,\r\n            boxShadow: availableStock === 0 ? '0 0 10px #f44336' : '0 0 5px #4caf50',\r\n            position: 'relative',\r\n            background: '#fff'\r\n          }}>\r\n            <h3>{product.name}</h3>\r\n            <p><strong>Price:</strong> M{product.price.toFixed(2)}</p>\r\n            <p>\r\n              <strong>Stock: </strong>\r\n              <input\r\n                type=\"text\"\r\n                value={editingValue !== undefined ? editingValue : product.stock}\r\n                onChange={e => onStockChange(product.id, e.target.value)}\r\n                style={{ width: 60 }}\r\n              />\r\n              <button\r\n                onClick={() => saveStock(product.id)}\r\n                disabled={editingValue === undefined || editingValue === String(product.stock)}\r\n                style={{ marginLeft: 8 }}\r\n              >\r\n                Update Stock\r\n              </button>\r\n            </p>\r\n            <p><strong>Available:</strong> {availableStock}</p>\r\n            <div style={{ marginTop: 12 }}>\r\n              <label>\r\n                Quantity to Sell:\r\n                <input\r\n                  type=\"number\"\r\n                  min={1}\r\n                  max={availableStock}\r\n                  value={sellQty}\r\n                  onChange={e => onSellQuantityChange(product.id, e.target.value)}\r\n                  disabled={availableStock === 0}\r\n                  style={{ width: 60, marginLeft: 8 }}\r\n                />\r\n              </label>\r\n              <button\r\n                onClick={() => sellProduct(product)}\r\n                disabled={availableStock === 0}\r\n                style={{ marginLeft: 10 }}\r\n              >\r\n                Sell\r\n              </button>\r\n            </div>\r\n            {availableStock === 0 && (\r\n              <div style={{\r\n                color: '#f44336',\r\n                fontWeight: 'bold',\r\n                position: 'absolute',\r\n                top: 10,\r\n                right: 10,\r\n              }}>\r\n                Out of Stock\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {receipt && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          bottom: 20,\r\n          right: 20,\r\n          background: '#fff',\r\n          padding: 20,\r\n          border: '1px solid #ddd',\r\n          boxShadow: '0 0 10px rgba(0,0,0,0.2)',\r\n          borderRadius: 8,\r\n          maxWidth: 320,\r\n          zIndex: 9999,\r\n        }}>\r\n          <h4>Sale Receipt</h4>\r\n          <p><strong>Date:</strong> {new Date(receipt.date).toLocaleDateString()}</p>\r\n          <p><strong>Product:</strong> {receipt.name}</p>\r\n          <p><strong>Quantity:</strong> {receipt.quantity}</p>\r\n          <p><strong>Total:</strong> M{receipt.amount.toFixed(2)}</p>\r\n          <button onClick={() => setReceipt(null)} style={{ marginTop: 10 }}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}