{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales({\n  products: initialProducts\n}) {\n  _s();\n  const [products, setProducts] = useState(initialProducts || []);\n  const [salesData, setSalesData] = useState([]);\n  const [dailySummary, setDailySummary] = useState({});\n  const [filterDate, setFilterDate] = useState('');\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [totalSales, setTotalSales] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const dateKey = filterDate || new Date().toISOString().split('T')[0];\n  useEffect(() => {\n    setProducts(initialProducts || []);\n    setLoading(false);\n  }, [initialProducts]);\n  const fetchSales = async () => {\n    try {\n      const res = await api.get('/sales' + (filterDate ? `?date=${filterDate}` : ''));\n      const sales = res.data || [];\n      setSalesData(sales);\n      processDailySummary(sales);\n    } catch (err) {\n      console.error('Error fetching sales:', err);\n    }\n  };\n  useEffect(() => {\n    fetchSales();\n  }, [filterDate]);\n  const processDailySummary = sales => {\n    const summary = {\n      starting: {},\n      sold: {},\n      remaining: {},\n      cashTotal: 0\n    };\n    products.forEach(p => {\n      summary.starting[p.id] = p.stock + sales.filter(s => s.productId === p.id).reduce((sum, s) => sum + s.quantity, 0);\n      summary.sold[p.id] = sales.filter(s => s.productId === p.id).reduce((sum, s) => sum + s.quantity, 0);\n      summary.remaining[p.id] = p.stock;\n    });\n    summary.cashTotal = sales.reduce((sum, s) => sum + s.amount, 0);\n    setDailySummary(summary);\n    setTotalSales(summary.cashTotal);\n  };\n  const sellProduct = async e => {\n    e.preventDefault();\n    const qty = parseInt(quantity, 10);\n    if (!selectedProduct || qty <= 0) {\n      alert('Please select a product and enter a valid quantity.');\n      return;\n    }\n    const product = products.find(p => p.id === selectedProduct);\n    if (!product || product.stock < qty) {\n      alert('Insufficient stock or invalid product.');\n      return;\n    }\n    try {\n      const saleAmount = parseFloat(product.price) * qty;\n      const saleData = {\n        productId: selectedProduct,\n        name: product.name,\n        quantity: qty,\n        amount: saleAmount,\n        date: dateKey,\n        id: Date.now() + Math.random()\n      };\n      await api.post('/sales', saleData);\n      const updatedProducts = products.map(p => p.id === selectedProduct ? {\n        ...p,\n        stock: p.stock - qty\n      } : p);\n      setProducts(updatedProducts);\n      let uiData = JSON.parse(localStorage.getItem('uiData') || '[]');\n      const idx = uiData.findIndex(p => p.id === selectedProduct);\n      if (idx !== -1) {\n        uiData[idx].stock -= qty;\n      } else {\n        uiData.push({\n          ...product,\n          stock: product.stock - qty\n        });\n      }\n      localStorage.setItem('uiData', JSON.stringify(uiData));\n      const newSales = [...salesData, saleData];\n      setSalesData(newSales);\n      processDailySummary(newSales);\n      setQuantity(1);\n      setSelectedProduct('');\n      generateReceipt(saleData);\n    } catch (err) {\n      console.error('Error processing sale:', err);\n      alert('Failed to record sale. Please try again.');\n    }\n  };\n  const generateReceipt = sale => {\n    const receiptText = `\n      Receipt for Sale\n      Date: ${sale.date}\n      Product: ${sale.name}\n      Quantity: ${sale.quantity}\n      Amount: $${sale.amount.toFixed(2)}\n\n      Thank you for your purchase!\n    `;\n    const blob = new Blob([receiptText], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `receipt-${sale.id}.txt`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: \"Loading sales...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Daily Summary (\", dateKey, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Starting Qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dailySummary.starting[p.id] || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dailySummary.sold[p.id] || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dailySummary.remaining[p.id] || p.stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, p.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"3\",\n              children: \"Total Cash from Sales:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"$\", totalSales.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sell Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sellProduct,\n        className: \"add-product-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"selectedProduct\",\n          value: selectedProduct,\n          onChange: e => {\n            setSelectedProduct(e.target.value);\n            setQuantity(1);\n          },\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), products.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: p.id,\n            children: [p.name, \" (Price: $\", parseFloat(p.price).toFixed(2), \", Stock: \", p.stock, \")\"]\n          }, p.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantity,\n          onChange: e => {\n            var _products$find;\n            return setQuantity(Math.min(Math.max(1, parseInt(e.target.value) || 1), ((_products$find = products.find(p => p.id === selectedProduct)) === null || _products$find === void 0 ? void 0 : _products$find.stock) || 1));\n          },\n          min: \"1\",\n          placeholder: \"Quantity\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sales Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: salesData.map(sale => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(sale.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sale.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sale.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", sale.amount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, sale.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"ta/leK8H5oOqmQX4EuTyhel4has=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Sales","products","initialProducts","_s","setProducts","salesData","setSalesData","dailySummary","setDailySummary","filterDate","setFilterDate","selectedProduct","setSelectedProduct","quantity","setQuantity","totalSales","setTotalSales","loading","setLoading","dateKey","Date","toISOString","split","fetchSales","res","get","sales","data","processDailySummary","err","console","error","summary","starting","sold","remaining","cashTotal","forEach","p","id","stock","filter","s","productId","reduce","sum","amount","sellProduct","e","preventDefault","qty","parseInt","alert","product","find","saleAmount","parseFloat","price","saleData","name","date","now","Math","random","post","updatedProducts","map","uiData","JSON","parse","localStorage","getItem","idx","findIndex","push","setItem","stringify","newSales","generateReceipt","sale","receiptText","toFixed","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","onSubmit","value","onChange","target","required","_products$find","min","max","placeholder","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Sales({ products: initialProducts }) {\r\n  const [products, setProducts] = useState(initialProducts || []);\r\n  const [salesData, setSalesData] = useState([]);\r\n  const [dailySummary, setDailySummary] = useState({});\r\n  const [filterDate, setFilterDate] = useState('');\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [totalSales, setTotalSales] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const dateKey = filterDate || (new Date().toISOString().split('T')[0]);\r\n\r\n  useEffect(() => {\r\n    setProducts(initialProducts || []);\r\n    setLoading(false);\r\n  }, [initialProducts]);\r\n\r\n  const fetchSales = async () => {\r\n    try {\r\n      const res = await api.get('/sales' + (filterDate ? `?date=${filterDate}` : ''));\r\n      const sales = res.data || [];\r\n      setSalesData(sales);\r\n      processDailySummary(sales);\r\n    } catch (err) {\r\n      console.error('Error fetching sales:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSales();\r\n  }, [filterDate]);\r\n\r\n  const processDailySummary = (sales) => {\r\n    const summary = { starting: {}, sold: {}, remaining: {}, cashTotal: 0 };\r\n\r\n    products.forEach(p => {\r\n      summary.starting[p.id] = p.stock + (sales.filter(s => s.productId === p.id).reduce((sum, s) => sum + s.quantity, 0));\r\n      summary.sold[p.id] = sales.filter(s => s.productId === p.id).reduce((sum, s) => sum + s.quantity, 0);\r\n      summary.remaining[p.id] = p.stock;\r\n    });\r\n\r\n    summary.cashTotal = sales.reduce((sum, s) => sum + s.amount, 0);\r\n    setDailySummary(summary);\r\n    setTotalSales(summary.cashTotal);\r\n  };\r\n\r\n  const sellProduct = async (e) => {\r\n    e.preventDefault();\r\n    const qty = parseInt(quantity, 10);\r\n    if (!selectedProduct || qty <= 0) {\r\n      alert('Please select a product and enter a valid quantity.');\r\n      return;\r\n    }\r\n\r\n    const product = products.find(p => p.id === selectedProduct);\r\n    if (!product || product.stock < qty) {\r\n      alert('Insufficient stock or invalid product.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const saleAmount = parseFloat(product.price) * qty;\r\n      const saleData = {\r\n        productId: selectedProduct,\r\n        name: product.name,\r\n        quantity: qty,\r\n        amount: saleAmount,\r\n        date: dateKey,\r\n        id: Date.now() + Math.random(),\r\n      };\r\n\r\n      await api.post('/sales', saleData);\r\n\r\n      const updatedProducts = products.map(p =>\r\n        p.id === selectedProduct ? { ...p, stock: p.stock - qty } : p\r\n      );\r\n      setProducts(updatedProducts);\r\n\r\n      let uiData = JSON.parse(localStorage.getItem('uiData') || '[]');\r\n      const idx = uiData.findIndex(p => p.id === selectedProduct);\r\n      if (idx !== -1) {\r\n        uiData[idx].stock -= qty;\r\n      } else {\r\n        uiData.push({ ...product, stock: product.stock - qty });\r\n      }\r\n      localStorage.setItem('uiData', JSON.stringify(uiData));\r\n\r\n      const newSales = [...salesData, saleData];\r\n      setSalesData(newSales);\r\n      processDailySummary(newSales);\r\n      setQuantity(1);\r\n      setSelectedProduct('');\r\n      generateReceipt(saleData);\r\n    } catch (err) {\r\n      console.error('Error processing sale:', err);\r\n      alert('Failed to record sale. Please try again.');\r\n    }\r\n  };\r\n\r\n  const generateReceipt = (sale) => {\r\n    const receiptText = `\r\n      Receipt for Sale\r\n      Date: ${sale.date}\r\n      Product: ${sale.name}\r\n      Quantity: ${sale.quantity}\r\n      Amount: $${sale.amount.toFixed(2)}\r\n\r\n      Thank you for your purchase!\r\n    `;\r\n    const blob = new Blob([receiptText], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `receipt-${sale.id}.txt`;\r\n    link.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  if (loading) return <div className=\"dashboard\">Loading sales...</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* 1. Daily Summary Table */}\r\n      <div className=\"card\">\r\n        <h3>Daily Summary ({dateKey})</h3>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Starting Qty</th>\r\n              <th>Sold</th>\r\n              <th>Remaining</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map(p => (\r\n              <tr key={p.id}>\r\n                <td>{p.name}</td>\r\n                <td>{dailySummary.starting[p.id] || 0}</td>\r\n                <td>{dailySummary.sold[p.id] || 0}</td>\r\n                <td>{dailySummary.remaining[p.id] || p.stock}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"3\">Total Cash from Sales:</th>\r\n              <th>${totalSales.toFixed(2)}</th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n\r\n      {/* 2. Sell Product Form */}\r\n      <div className=\"card\">\r\n        <h3>Sell Product</h3>\r\n        <form onSubmit={sellProduct} className=\"add-product-form\">\r\n          <select\r\n            name=\"selectedProduct\"\r\n            value={selectedProduct}\r\n            onChange={(e) => { setSelectedProduct(e.target.value); setQuantity(1); }}\r\n            required\r\n          >\r\n            <option value=\"\">Select a Product</option>\r\n            {products.map(p => (\r\n              <option key={p.id} value={p.id}>\r\n                {p.name} (Price: ${parseFloat(p.price).toFixed(2)}, Stock: {p.stock})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={(e) =>\r\n              setQuantity(Math.min(Math.max(1, parseInt(e.target.value) || 1), products.find(p => p.id === selectedProduct)?.stock || 1))\r\n            }\r\n            min=\"1\"\r\n            placeholder=\"Quantity\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Sell</button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* 3. Sales Transactions */}\r\n      <div className=\"card\">\r\n        <h3>Sales Transactions</h3>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Product</th>\r\n              <th>Quantity</th>\r\n              <th>Amount</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {salesData.map((sale) => (\r\n              <tr key={sale.id}>\r\n                <td>{new Date(sale.date).toLocaleDateString()}</td>\r\n                <td>{sale.name}</td>\r\n                <td>{sale.quantity}</td>\r\n                <td>${sale.amount.toFixed(2)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}