{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales({\n  products: initialProducts,\n  updateProductQuantity\n}) {\n  _s();\n  const [products, setProducts] = useState(initialProducts || []);\n  const [selling, setSelling] = useState({});\n  useEffect(() => {\n    setProducts(initialProducts || []);\n  }, [initialProducts]);\n  const handleQuantityChange = (productId, value) => {\n    const product = products.find(p => p.id === productId);\n    if (!product) return;\n    const stock = Number(product.quantity || 0);\n    const num = Math.max(1, Math.min(parseInt(value, 10) || 1, stock));\n    setSelling(prev => ({\n      ...prev,\n      [productId]: num\n    }));\n  };\n  const sellProduct = async productId => {\n    const quantity = selling[productId] || 1;\n    const product = products.find(p => p.id === productId);\n    if (!product) return alert('Product not found');\n    if (quantity > product.quantity) {\n      return alert(`Quantity (${quantity}) exceeds available stock (${product.quantity}).`);\n    }\n    const transactionData = {\n      type: 'deduct',\n      amount: quantity,\n      note: 'sold',\n      productId,\n      date: new Date().toISOString().split('T')[0]\n    };\n    try {\n      // Post transaction to deduct stock\n      const response = await api.post(`/products/${productId}/transaction`, transactionData);\n      if (!response.data || response.data.success !== true) {\n        throw new Error('Transaction failed to process on server');\n      }\n\n      // Update product quantity on the server (optional, depending on backend)\n      const updatedProduct = {\n        ...product,\n        quantity: product.quantity - quantity\n      };\n      await api.put(`/products/${productId}`, updatedProduct);\n\n      // Update local state\n      setProducts(prevProducts => prevProducts.map(p => p.id === productId ? updatedProduct : p));\n\n      // Inform parent component (if provided)\n      if (updateProductQuantity) {\n        updateProductQuantity(productId, updatedProduct.quantity);\n      }\n\n      // Reset selling quantity for this product\n      setSelling(prev => ({\n        ...prev,\n        [productId]: 1\n      }));\n      alert(`Sold ${quantity} x ${product.name} successfully! Total: M${(product.price * quantity).toFixed(2)}`);\n    } catch (err) {\n      console.error('Sale failed:', err);\n      if (err.response) {\n        switch (err.response.status) {\n          case 400:\n            alert('Invalid sale data. Please check the quantity.');\n            break;\n          case 500:\n            alert('Server error. Please try again later.');\n            break;\n          default:\n            alert(`Sale failed. ${err.message || 'Check console for details.'}`);\n        }\n      } else {\n        alert('Network error. Please check your connection.');\n      }\n    }\n  };\n  if (!products.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No products available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 15\n      },\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: 250,\n          padding: 15,\n          border: '1px solid #ccc',\n          borderRadius: 8\n        },\n        children: [product.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name,\n          style: {\n            width: '100%',\n            height: 150,\n            objectFit: 'cover',\n            marginBottom: 10\n          },\n          onError: e => e.target.src = 'https://via.placeholder.com/150?text=No+Image'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: M\", Number(product.price || 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stock: \", product.quantity || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: product.quantity || 0,\n          value: selling[product.id] || 1,\n          onChange: e => handleQuantityChange(product.id, e.target.value),\n          disabled: product.quantity === 0,\n          style: {\n            width: '80px',\n            marginBottom: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sellProduct(product.id),\n          disabled: product.quantity === 0,\n          style: {\n            width: '100%',\n            backgroundColor: product.quantity === 0 ? '#ccc' : '#007bff',\n            color: '#fff',\n            border: 'none',\n            padding: '8px',\n            cursor: product.quantity === 0 ? 'not-allowed' : 'pointer'\n          },\n          children: product.quantity === 0 ? 'Out of Stock' : 'Sell'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"22DQX5mnGESpA6FuBVDzNfhvIfE=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Sales","products","initialProducts","updateProductQuantity","_s","setProducts","selling","setSelling","handleQuantityChange","productId","value","product","find","p","id","stock","Number","quantity","num","Math","max","min","parseInt","prev","sellProduct","alert","transactionData","type","amount","note","date","Date","toISOString","split","response","post","data","success","Error","updatedProduct","put","prevProducts","map","name","price","toFixed","err","console","error","status","message","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","flexWrap","gap","width","padding","border","borderRadius","image","src","alt","height","objectFit","marginBottom","onError","e","target","onChange","disabled","onClick","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Sales({ products: initialProducts, updateProductQuantity }) {\r\n  const [products, setProducts] = useState(initialProducts || []);\r\n  const [selling, setSelling] = useState({});\r\n\r\n  useEffect(() => {\r\n    setProducts(initialProducts || []);\r\n  }, [initialProducts]);\r\n\r\n  const handleQuantityChange = (productId, value) => {\r\n    const product = products.find(p => p.id === productId);\r\n    if (!product) return;\r\n    const stock = Number(product.quantity || 0);\r\n    const num = Math.max(1, Math.min(parseInt(value, 10) || 1, stock));\r\n    setSelling(prev => ({ ...prev, [productId]: num }));\r\n  };\r\n\r\n  const sellProduct = async (productId) => {\r\n    const quantity = selling[productId] || 1;\r\n    const product = products.find(p => p.id === productId);\r\n    if (!product) return alert('Product not found');\r\n\r\n    if (quantity > product.quantity) {\r\n      return alert(`Quantity (${quantity}) exceeds available stock (${product.quantity}).`);\r\n    }\r\n\r\n    const transactionData = {\r\n      type: 'deduct',\r\n      amount: quantity,\r\n      note: 'sold',\r\n      productId,\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n\r\n    try {\r\n      // Post transaction to deduct stock\r\n      const response = await api.post(`/products/${productId}/transaction`, transactionData);\r\n\r\n      if (!response.data || response.data.success !== true) {\r\n        throw new Error('Transaction failed to process on server');\r\n      }\r\n\r\n      // Update product quantity on the server (optional, depending on backend)\r\n      const updatedProduct = { ...product, quantity: product.quantity - quantity };\r\n      await api.put(`/products/${productId}`, updatedProduct);\r\n\r\n      // Update local state\r\n      setProducts(prevProducts =>\r\n        prevProducts.map(p => (p.id === productId ? updatedProduct : p))\r\n      );\r\n\r\n      // Inform parent component (if provided)\r\n      if (updateProductQuantity) {\r\n        updateProductQuantity(productId, updatedProduct.quantity);\r\n      }\r\n\r\n      // Reset selling quantity for this product\r\n      setSelling(prev => ({ ...prev, [productId]: 1 }));\r\n\r\n      alert(`Sold ${quantity} x ${product.name} successfully! Total: M${(product.price * quantity).toFixed(2)}`);\r\n    } catch (err) {\r\n      console.error('Sale failed:', err);\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            alert('Invalid sale data. Please check the quantity.');\r\n            break;\r\n          case 500:\r\n            alert('Server error. Please try again later.');\r\n            break;\r\n          default:\r\n            alert(`Sale failed. ${err.message || 'Check console for details.'}`);\r\n        }\r\n      } else {\r\n        alert('Network error. Please check your connection.');\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!products.length) return <div>No products available</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h3>Sales</h3>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: 15 }}>\r\n        {products.map(product => (\r\n          <div\r\n            key={product.id}\r\n            className=\"card\"\r\n            style={{ width: 250, padding: 15, border: '1px solid #ccc', borderRadius: 8 }}\r\n          >\r\n            {product.image && (\r\n              <img\r\n                src={product.image}\r\n                alt={product.name}\r\n                style={{ width: '100%', height: 150, objectFit: 'cover', marginBottom: 10 }}\r\n                onError={e => e.target.src = 'https://via.placeholder.com/150?text=No+Image'}\r\n              />\r\n            )}\r\n            <h4>{product.name}</h4>\r\n            <p>Price: M{Number(product.price || 0).toFixed(2)}</p>\r\n            <p>Stock: {product.quantity || 0}</p>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max={product.quantity || 0}\r\n              value={selling[product.id] || 1}\r\n              onChange={e => handleQuantityChange(product.id, e.target.value)}\r\n              disabled={product.quantity === 0}\r\n              style={{ width: '80px', marginBottom: 8 }}\r\n            />\r\n            <button\r\n              onClick={() => sellProduct(product.id)}\r\n              disabled={product.quantity === 0}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: product.quantity === 0 ? '#ccc' : '#007bff',\r\n                color: '#fff',\r\n                border: 'none',\r\n                padding: '8px',\r\n                cursor: product.quantity === 0 ? 'not-allowed' : 'pointer',\r\n              }}\r\n            >\r\n              {product.quantity === 0 ? 'Out of Stock' : 'Sell'}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}