{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales({\n  products: initialProducts,\n  onChanged\n}) {\n  _s();\n  var _products$find;\n  const [salesData, setSalesData] = useState([]);\n  const [totalSales, setTotalSales] = useState(0);\n  const [filterDate, setFilterDate] = useState(new Date().toISOString().split('T')[0]);\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [products, setProducts] = useState(initialProducts || []);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setProducts(initialProducts || []);\n    setLoading(false);\n  }, [initialProducts]);\n  const fetchData = async () => {\n    try {\n      const [productsRes, transactionsRes] = await Promise.all([api.get('/products'), api.get('/transactions')]);\n      const staticProducts = productsRes.data || [];\n      const allTransactions = transactionsRes.data || [];\n      setProducts(staticProducts);\n\n      // Compute sales data for the selected date\n      const dailyDeducts = allTransactions.filter(t => t.date.split('T')[0] === filterDate && t.type === 'deduct');\n      const dailySales = {};\n      dailyDeducts.forEach(t => {\n        dailySales[t.productId] = (dailySales[t.productId] || 0) + t.amount;\n      });\n      let totalCash = 0;\n      const summary = staticProducts.map(p => {\n        const sold = dailySales[p.id] || 0;\n        const initial = (Number(p.quantity) || 0) + sold;\n        const left = Number(p.quantity) || 0;\n        const cash = sold * (Number(p.price) || 0);\n        totalCash += cash;\n        return {\n          name: p.name,\n          initial,\n          sold,\n          left,\n          cash: cash.toFixed(2)\n        };\n      });\n      setSalesData(summary);\n      setTotalSales(totalCash);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [filterDate, fetchData]); // Added fetchData to dependency array\n\n  const sellProduct = async e => {\n    e.preventDefault();\n    if (!selectedProduct || quantity <= 0) {\n      alert('Please select a product and enter a valid quantity.');\n      return;\n    }\n    const product = products.find(p => p.id === selectedProduct);\n    if (!product || (Number(product.quantity) || 0) < quantity) {\n      alert('Insufficient stock or invalid product.');\n      return;\n    }\n    if (!window.confirm(`Confirm sale of ${quantity} ${product.name} for $${(product.price * quantity).toFixed(2)}?`)) {\n      return;\n    }\n    try {\n      const transactionData = {\n        type: 'deduct',\n        amount: quantity,\n        note: 'sold',\n        productId: selectedProduct,\n        date: new Date().toISOString()\n      };\n      await api.post(`/products/${selectedProduct}/transaction`, transactionData);\n\n      // Update local products state\n      const updatedProducts = products.map(p => p.id === selectedProduct ? {\n        ...p,\n        quantity: (Number(p.quantity) || 0) - quantity\n      } : p);\n      setProducts(updatedProducts);\n\n      // Refresh data\n      await fetchData();\n      if (onChanged) onChanged();\n      setQuantity(1);\n      setSelectedProduct('');\n    } catch (err) {\n      console.error('Error processing sale:', err);\n      alert('Failed to record sale. Please try again.');\n    }\n  };\n  const maxQuantity = selectedProduct ? ((_products$find = products.find(p => p.id === selectedProduct)) === null || _products$find === void 0 ? void 0 : _products$find.quantity) || 0 : 0;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: \"Loading sales...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sales Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter by Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filterDate,\n          onChange: e => setFilterDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Sales: $\", totalSales.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Stock Left: \", products.reduce((sum, p) => sum + (Number(p.quantity) || 0), 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sell Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sellProduct,\n        className: \"add-product-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"selectedProduct\",\n          value: selectedProduct,\n          onChange: e => {\n            setSelectedProduct(e.target.value);\n            setQuantity(1); // Reset quantity when product changes\n          },\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), products.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: p.id,\n            children: [p.name, \" (Stock: \", p.quantity || 0, \")\"]\n          }, p.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantity,\n          onChange: e => setQuantity(Math.min(Math.max(1, parseInt(e.target.value) || 1), maxQuantity)),\n          min: \"1\",\n          max: maxQuantity,\n          placeholder: \"Quantity\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Sales Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Initial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: salesData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.initial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.sold\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.left\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", item.cash]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"Fr5x2EOjpC9w7a38ha2uJe8K7AI=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Sales","products","initialProducts","onChanged","_s","_products$find","salesData","setSalesData","totalSales","setTotalSales","filterDate","setFilterDate","Date","toISOString","split","selectedProduct","setSelectedProduct","quantity","setQuantity","setProducts","loading","setLoading","fetchData","productsRes","transactionsRes","Promise","all","get","staticProducts","data","allTransactions","dailyDeducts","filter","t","date","type","dailySales","forEach","productId","amount","totalCash","summary","map","p","sold","id","initial","Number","left","cash","price","name","toFixed","err","console","error","sellProduct","e","preventDefault","alert","product","find","window","confirm","transactionData","note","post","updatedProducts","maxQuantity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","value","onChange","target","reduce","sum","onSubmit","required","Math","min","max","parseInt","placeholder","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Sales({ products: initialProducts, onChanged }) {\r\n  const [salesData, setSalesData] = useState([]);\r\n  const [totalSales, setTotalSales] = useState(0);\r\n  const [filterDate, setFilterDate] = useState(new Date().toISOString().split('T')[0]);\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [products, setProducts] = useState(initialProducts || []);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setProducts(initialProducts || []);\r\n    setLoading(false);\r\n  }, [initialProducts]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const [productsRes, transactionsRes] = await Promise.all([\r\n        api.get('/products'),\r\n        api.get('/transactions')\r\n      ]);\r\n      const staticProducts = productsRes.data || [];\r\n      const allTransactions = transactionsRes.data || [];\r\n\r\n      setProducts(staticProducts);\r\n\r\n      // Compute sales data for the selected date\r\n      const dailyDeducts = allTransactions.filter(t => t.date.split('T')[0] === filterDate && t.type === 'deduct');\r\n      const dailySales = {};\r\n      dailyDeducts.forEach(t => {\r\n        dailySales[t.productId] = (dailySales[t.productId] || 0) + t.amount;\r\n      });\r\n\r\n      let totalCash = 0;\r\n      const summary = staticProducts.map(p => {\r\n        const sold = dailySales[p.id] || 0;\r\n        const initial = (Number(p.quantity) || 0) + sold;\r\n        const left = Number(p.quantity) || 0;\r\n        const cash = sold * (Number(p.price) || 0);\r\n        totalCash += cash;\r\n        return { name: p.name, initial, sold, left, cash: cash.toFixed(2) };\r\n      });\r\n\r\n      setSalesData(summary);\r\n      setTotalSales(totalCash);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [filterDate, fetchData]); // Added fetchData to dependency array\r\n\r\n  const sellProduct = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedProduct || quantity <= 0) {\r\n      alert('Please select a product and enter a valid quantity.');\r\n      return;\r\n    }\r\n\r\n    const product = products.find(p => p.id === selectedProduct);\r\n    if (!product || (Number(product.quantity) || 0) < quantity) {\r\n      alert('Insufficient stock or invalid product.');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(`Confirm sale of ${quantity} ${product.name} for $${(product.price * quantity).toFixed(2)}?`)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const transactionData = {\r\n        type: 'deduct',\r\n        amount: quantity,\r\n        note: 'sold',\r\n        productId: selectedProduct,\r\n        date: new Date().toISOString()\r\n      };\r\n      await api.post(`/products/${selectedProduct}/transaction`, transactionData);\r\n\r\n      // Update local products state\r\n      const updatedProducts = products.map(p =>\r\n        p.id === selectedProduct ? { ...p, quantity: (Number(p.quantity) || 0) - quantity } : p\r\n      );\r\n      setProducts(updatedProducts);\r\n\r\n      // Refresh data\r\n      await fetchData();\r\n      if (onChanged) onChanged();\r\n\r\n      setQuantity(1);\r\n      setSelectedProduct('');\r\n    } catch (err) {\r\n      console.error('Error processing sale:', err);\r\n      alert('Failed to record sale. Please try again.');\r\n    }\r\n  };\r\n\r\n  const maxQuantity = selectedProduct ? (products.find(p => p.id === selectedProduct)?.quantity || 0) : 0;\r\n\r\n  if (loading) return <div className=\"dashboard\">Loading sales...</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"card\">\r\n        <h3>Sales Overview</h3>\r\n        <div style={{ marginBottom: '15px' }}>\r\n          <label>Filter by Date: </label>\r\n          <input\r\n            type=\"date\"\r\n            value={filterDate}\r\n            onChange={(e) => setFilterDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <p>Total Sales: ${totalSales.toFixed(2)}</p>\r\n        <p>Total Stock Left: {products.reduce((sum, p) => sum + (Number(p.quantity) || 0), 0)}</p>\r\n      </div>\r\n      <div className=\"card\">\r\n        <h3>Sell Product</h3>\r\n        <form onSubmit={sellProduct} className=\"add-product-form\">\r\n          <select\r\n            name=\"selectedProduct\"\r\n            value={selectedProduct}\r\n            onChange={(e) => {\r\n              setSelectedProduct(e.target.value);\r\n              setQuantity(1); // Reset quantity when product changes\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\">Select a Product</option>\r\n            {products.map(p => (\r\n              <option key={p.id} value={p.id}>\r\n                {p.name} (Stock: {p.quantity || 0})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={(e) => setQuantity(Math.min(Math.max(1, parseInt(e.target.value) || 1), maxQuantity))}\r\n            min=\"1\"\r\n            max={maxQuantity}\r\n            placeholder=\"Quantity\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Sell</button>\r\n        </form>\r\n      </div>\r\n      <div className=\"card\">\r\n        <h3>Daily Sales Summary</h3>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Initial</th>\r\n              <th>Sold</th>\r\n              <th>Left</th>\r\n              <th>Cash</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {salesData.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item.name}</td>\r\n                <td>{item.initial}</td>\r\n                <td>{item.sold}</td>\r\n                <td>{item.left}</td>\r\n                <td>${item.cash}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}