{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales({\n  onChanged\n}) {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selling, setSelling] = useState({});\n  const [totalSold, setTotalSold] = useState(0);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [totalProfit, setTotalProfit] = useState(0);\n  const fetchProducts = async () => {\n    try {\n      const res = await api.get('/products');\n      setProducts(res.data || []);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  useEffect(() => {\n    if (onChanged) fetchProducts(); // refresh on external change\n  }, [onChanged]);\n  const handleSellQuantityChange = (productId, value) => {\n    if (value === '' || /^\\d+$/.test(value)) {\n      setSelling(prev => ({\n        ...prev,\n        [productId]: value\n      }));\n    }\n  };\n  const updateProductQuantity = (productId, quantity) => {\n    setProducts(prev => prev.map(p => p.id === productId ? {\n      ...p,\n      quantity\n    } : p));\n  };\n  const sellProduct = async productId => {\n    const quantity = parseInt(selling[productId] || '1', 10);\n    if (!quantity || quantity <= 0) return alert('Enter a valid quantity.');\n    const product = products.find(p => p.id === productId);\n    if (!product) return alert('Product not found.');\n    if (quantity > product.quantity) {\n      return alert(`Quantity (${quantity}) exceeds available stock (${product.quantity}).`);\n    }\n    const transactionData = {\n      type: 'deduct',\n      amount: quantity,\n      note: 'sold',\n      productId,\n      date: new Date().toISOString().split('T')[0]\n    };\n    try {\n      await api.post(`/products/${productId}/transaction`, transactionData);\n      const updatedQuantity = product.quantity - quantity;\n      await api.put(`/products/${productId}`, {\n        quantity: updatedQuantity\n      });\n      updateProductQuantity(productId, updatedQuantity);\n      setSelling(prev => ({\n        ...prev,\n        [productId]: 1\n      }));\n      if (onChanged) onChanged();\n\n      // Update sales totals locally for instant UI update\n      setTotalSold(prev => prev + quantity);\n      setTotalRevenue(prev => prev + product.price * quantity);\n      setTotalProfit(prev => prev + (product.price - product.cost) * quantity);\n      alert(`Sold ${quantity} x ${product.name} successfully! Total: M${(product.price * quantity).toFixed(2)}`);\n    } catch (err) {\n      console.error('Sale failed:', err);\n      alert('Sale failed. Check console for details.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: \"Loading sales...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table product-inventory\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Available Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price (M)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cost (M)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity to Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => {\n          const quantityToSell = selling[product.id] || 1;\n          const isLowStock = product.quantity <= 5;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: isLowStock ? '#ffcccc' : 'transparent'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: `M${product.price.toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: `M${product.cost.toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: quantityToSell,\n                onChange: e => handleSellQuantityChange(product.id, e.target.value),\n                style: {\n                  width: '60px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => sellProduct(product.id),\n                children: \"Sell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Sales Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Sold: \", totalSold]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Revenue: M\", totalRevenue.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Profit: M\", totalProfit.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"vWnoJgmVGTGd7ZLqX7ACnTjLM4k=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Sales","onChanged","_s","products","setProducts","loading","setLoading","selling","setSelling","totalSold","setTotalSold","totalRevenue","setTotalRevenue","totalProfit","setTotalProfit","fetchProducts","res","get","data","error","console","handleSellQuantityChange","productId","value","test","prev","updateProductQuantity","quantity","map","p","id","sellProduct","parseInt","alert","product","find","transactionData","type","amount","note","date","Date","toISOString","split","post","updatedQuantity","put","price","cost","name","toFixed","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","quantityToSell","isLowStock","style","backgroundColor","onChange","e","target","width","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Sales({ onChanged }) {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selling, setSelling] = useState({});\r\n  const [totalSold, setTotalSold] = useState(0);\r\n  const [totalRevenue, setTotalRevenue] = useState(0);\r\n  const [totalProfit, setTotalProfit] = useState(0);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await api.get('/products');\r\n      setProducts(res.data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onChanged) fetchProducts(); // refresh on external change\r\n  }, [onChanged]);\r\n\r\n  const handleSellQuantityChange = (productId, value) => {\r\n    if (value === '' || /^\\d+$/.test(value)) {\r\n      setSelling(prev => ({ ...prev, [productId]: value }));\r\n    }\r\n  };\r\n\r\n  const updateProductQuantity = (productId, quantity) => {\r\n    setProducts(prev =>\r\n      prev.map(p => (p.id === productId ? { ...p, quantity } : p))\r\n    );\r\n  };\r\n\r\n  const sellProduct = async (productId) => {\r\n    const quantity = parseInt(selling[productId] || '1', 10);\r\n    if (!quantity || quantity <= 0) return alert('Enter a valid quantity.');\r\n\r\n    const product = products.find(p => p.id === productId);\r\n    if (!product) return alert('Product not found.');\r\n\r\n    if (quantity > product.quantity) {\r\n      return alert(`Quantity (${quantity}) exceeds available stock (${product.quantity}).`);\r\n    }\r\n\r\n    const transactionData = {\r\n      type: 'deduct',\r\n      amount: quantity,\r\n      note: 'sold',\r\n      productId,\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n\r\n    try {\r\n      await api.post(`/products/${productId}/transaction`, transactionData);\r\n      const updatedQuantity = product.quantity - quantity;\r\n      await api.put(`/products/${productId}`, { quantity: updatedQuantity });\r\n\r\n      updateProductQuantity(productId, updatedQuantity);\r\n      setSelling(prev => ({ ...prev, [productId]: 1 }));\r\n\r\n      if (onChanged) onChanged();\r\n\r\n      // Update sales totals locally for instant UI update\r\n      setTotalSold(prev => prev + quantity);\r\n      setTotalRevenue(prev => prev + product.price * quantity);\r\n      setTotalProfit(prev => prev + (product.price - product.cost) * quantity);\r\n\r\n      alert(`Sold ${quantity} x ${product.name} successfully! Total: M${(product.price * quantity).toFixed(2)}`);\r\n    } catch (err) {\r\n      console.error('Sale failed:', err);\r\n      alert('Sale failed. Check console for details.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"dashboard\">Loading sales...</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard card\">\r\n      <h3>Sales</h3>\r\n      <table className=\"table product-inventory\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Available Stock</th>\r\n            <th>Price (M)</th>\r\n            <th>Cost (M)</th>\r\n            <th>Quantity to Sell</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map(product => {\r\n            const quantityToSell = selling[product.id] || 1;\r\n            const isLowStock = product.quantity <= 5;\r\n            return (\r\n              <tr\r\n                key={product.id}\r\n                style={{ backgroundColor: isLowStock ? '#ffcccc' : 'transparent' }}\r\n              >\r\n                <td>{product.name}</td>\r\n                <td>{product.quantity}</td>\r\n                <td>{`M${product.price.toFixed(2)}`}</td>\r\n                <td>{`M${product.cost.toFixed(2)}`}</td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={quantityToSell}\r\n                    onChange={e => handleSellQuantityChange(product.id, e.target.value)}\r\n                    style={{ width: '60px' }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <button onClick={() => sellProduct(product.id)}>Sell</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div style={{ marginTop: 20 }}>\r\n        <h4>Sales Summary</h4>\r\n        <p>Total Sold: {totalSold}</p>\r\n        <p>Total Revenue: M{totalRevenue.toFixed(2)}</p>\r\n        <p>Total Profit: M{totalProfit.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}