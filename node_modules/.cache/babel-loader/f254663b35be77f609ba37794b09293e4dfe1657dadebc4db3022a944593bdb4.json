{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales({\n  products,\n  updateProductQuantity,\n  onSold\n}) {\n  _s();\n  const [selling, setSelling] = useState({});\n  const handleQuantityChange = (productId, value) => {\n    const product = products.find(p => p.id === productId);\n    if (!product) return;\n    const quantity = Number(product.quantity || 0);\n    const num = Math.max(1, Math.min(parseInt(value, 10) || 1, quantity));\n    setSelling(prev => ({\n      ...prev,\n      [productId]: num\n    }));\n  };\n  const sellProduct = async productId => {\n    const quantityToSell = selling[productId] || 1;\n    const product = products.find(p => p.id === productId);\n    if (!product) return alert('Product not found');\n    if (quantityToSell > product.quantity) {\n      return alert(`Quantity (${quantityToSell}) exceeds available quantity (${product.quantity}).`);\n    }\n    const transactionData = {\n      type: 'deduct',\n      amount: Number(quantityToSell),\n      note: 'sold',\n      productId,\n      date: new Date().toISOString().split('T')[0]\n    };\n    try {\n      console.log('Sending transaction data:', transactionData); // Debug log\n      await api.post(`/products/${productId}/transaction`, transactionData);\n      const updatedQuantity = product.quantity - quantityToSell;\n      const updatedProduct = {\n        ...product,\n        quantity: updatedQuantity\n      };\n      await api.put(`/products/${productId}`, updatedProduct);\n      updateProductQuantity(productId, updatedQuantity);\n      if (onSold) onSold();\n      setSelling(prev => ({\n        ...prev,\n        [productId]: 1\n      }));\n      alert(`Sold ${quantityToSell} x ${product.name} successfully! Total: M${(product.price * quantityToSell).toFixed(2)}`);\n    } catch (err) {\n      console.error('Sale failed:', err);\n      if (err.response) {\n        switch (err.response.status) {\n          case 400:\n            alert('Invalid sale data. Please check the quantity.');\n            break;\n          case 500:\n            alert('Server error. Please try again later.');\n            break;\n          default:\n            alert('Sale failed. Check console for details.');\n        }\n      } else {\n        alert('Network error. Please check your connection.');\n      }\n    }\n  };\n  if (products.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No products available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 15\n      },\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: 250,\n          padding: 15,\n          border: '1px solid #ccc',\n          borderRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: M\", Number(product.price || 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", product.quantity || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: product.quantity || 0,\n          value: selling[product.id] || 1,\n          onChange: e => handleQuantityChange(product.id, e.target.value),\n          disabled: product.quantity === 0,\n          style: {\n            width: '80px',\n            marginBottom: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sellProduct(product.id),\n          disabled: product.quantity === 0,\n          style: {\n            width: '100%',\n            backgroundColor: product.quantity === 0 ? '#ccc' : '#007bff',\n            color: '#fff',\n            border: 'none',\n            padding: '8px',\n            cursor: product.quantity === 0 ? 'not-allowed' : 'pointer'\n          },\n          children: product.quantity === 0 ? 'Out of Stock' : 'Sell'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"HGj7Ez10Lm+JY6s/TtLW9HBlxDE=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","Sales","products","updateProductQuantity","onSold","_s","selling","setSelling","handleQuantityChange","productId","value","product","find","p","id","quantity","Number","num","Math","max","min","parseInt","prev","sellProduct","quantityToSell","alert","transactionData","type","amount","note","date","Date","toISOString","split","console","log","post","updatedQuantity","updatedProduct","put","name","price","toFixed","err","error","response","status","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","flexWrap","gap","map","width","padding","border","borderRadius","onChange","e","target","disabled","marginBottom","onClick","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Sales({ products, updateProductQuantity, onSold }) {\r\n  const [selling, setSelling] = useState({});\r\n\r\n  const handleQuantityChange = (productId, value) => {\r\n    const product = products.find(p => p.id === productId);\r\n    if (!product) return;\r\n    const quantity = Number(product.quantity || 0);\r\n    const num = Math.max(1, Math.min(parseInt(value, 10) || 1, quantity));\r\n    setSelling(prev => ({ ...prev, [productId]: num }));\r\n  };\r\n\r\n  const sellProduct = async (productId) => {\r\n    const quantityToSell = selling[productId] || 1;\r\n    const product = products.find(p => p.id === productId);\r\n    if (!product) return alert('Product not found');\r\n\r\n    if (quantityToSell > product.quantity) {\r\n      return alert(`Quantity (${quantityToSell}) exceeds available quantity (${product.quantity}).`);\r\n    }\r\n\r\n    const transactionData = {\r\n      type: 'deduct',\r\n      amount: Number(quantityToSell),\r\n      note: 'sold',\r\n      productId,\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n\r\n    try {\r\n      console.log('Sending transaction data:', transactionData); // Debug log\r\n      await api.post(`/products/${productId}/transaction`, transactionData);\r\n      const updatedQuantity = product.quantity - quantityToSell;\r\n      const updatedProduct = { ...product, quantity: updatedQuantity };\r\n      await api.put(`/products/${productId}`, updatedProduct);\r\n      updateProductQuantity(productId, updatedQuantity);\r\n      if (onSold) onSold();\r\n      setSelling(prev => ({ ...prev, [productId]: 1 }));\r\n      alert(`Sold ${quantityToSell} x ${product.name} successfully! Total: M${(product.price * quantityToSell).toFixed(2)}`);\r\n    } catch (err) {\r\n      console.error('Sale failed:', err);\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            alert('Invalid sale data. Please check the quantity.');\r\n            break;\r\n          case 500:\r\n            alert('Server error. Please try again later.');\r\n            break;\r\n          default:\r\n            alert('Sale failed. Check console for details.');\r\n        }\r\n      } else {\r\n        alert('Network error. Please check your connection.');\r\n      }\r\n    }\r\n  };\r\n\r\n  if (products.length === 0) return <div>No products available</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h3>Sales</h3>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: 15 }}>\r\n        {products.map(product => (\r\n          <div\r\n            key={product.id}\r\n            className=\"card\"\r\n            style={{ width: 250, padding: 15, border: '1px solid #ccc', borderRadius: 8 }}\r\n          >\r\n            <h4>{product.name}</h4>\r\n            <p>Price: M{Number(product.price || 0).toFixed(2)}</p>\r\n            <p>Quantity: {product.quantity || 0}</p>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max={product.quantity || 0}\r\n              value={selling[product.id] || 1}\r\n              onChange={e => handleQuantityChange(product.id, e.target.value)}\r\n              disabled={product.quantity === 0}\r\n              style={{ width: '80px', marginBottom: 8 }}\r\n            />\r\n            <button\r\n              onClick={() => sellProduct(product.id)}\r\n              disabled={product.quantity === 0}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: product.quantity === 0 ? '#ccc' : '#007bff',\r\n                color: '#fff',\r\n                border: 'none',\r\n                padding: '8px',\r\n                cursor: product.quantity === 0 ? 'not-allowed' : 'pointer',\r\n              }}\r\n            >\r\n              {product.quantity === 0 ? 'Out of Stock' : 'Sell'}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}