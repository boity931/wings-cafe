{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reports({\n  refreshSignal\n}) {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchReports = async () => {\n    try {\n      const [transRes, prodRes] = await Promise.all([api.get('/transactions'), api.get('/products')]);\n      setTransactions(transRes.data || []);\n      setProducts(prodRes.data || []);\n    } catch (error) {\n      console.error('Failed to load reports:', error);\n      setTransactions([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchReports();\n  }, [refreshSignal]);\n  const getProductName = id => {\n    const product = products.find(p => p.id === id);\n    return product ? product.name : 'Unknown Product';\n  };\n  const getProductCategory = id => {\n    const product = products.find(p => p.id === id);\n    return product ? product.category : 'Unknown';\n  };\n  const formatDate = iso => new Date(iso).toLocaleString();\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: \"Loading reports...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (transactions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: \"No transactions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [...transactions].reverse().map(txn => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: getProductName(txn.productId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: getProductCategory(txn.productId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                color: txn.type === 'add' ? 'green' : 'red'\n              },\n              children: txn.type.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: txn.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: txn.note || '—'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(txn.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, txn.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Reports, \"D3NDTh80dvRXwpF1ew/Gzq0LdA4=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Reports","refreshSignal","_s","transactions","setTransactions","products","setProducts","loading","setLoading","fetchReports","transRes","prodRes","Promise","all","get","data","error","console","getProductName","id","product","find","p","name","getProductCategory","category","formatDate","iso","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","width","borderCollapse","reverse","map","txn","productId","color","type","toUpperCase","amount","note","date","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Reports.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Reports({ refreshSignal }) {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchReports = async () => {\r\n    try {\r\n      const [transRes, prodRes] = await Promise.all([\r\n        api.get('/transactions'),\r\n        api.get('/products'),\r\n      ]);\r\n\r\n      setTransactions(transRes.data || []);\r\n      setProducts(prodRes.data || []);\r\n    } catch (error) {\r\n      console.error('Failed to load reports:', error);\r\n      setTransactions([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchReports();\r\n  }, [refreshSignal]);\r\n\r\n  const getProductName = (id) => {\r\n    const product = products.find(p => p.id === id);\r\n    return product ? product.name : 'Unknown Product';\r\n  };\r\n\r\n  const getProductCategory = (id) => {\r\n    const product = products.find(p => p.id === id);\r\n    return product ? product.category : 'Unknown';\r\n  };\r\n\r\n  const formatDate = (iso) => new Date(iso).toLocaleString();\r\n\r\n  if (loading) return <div className=\"dashboard\">Loading reports...</div>;\r\n\r\n  if (transactions.length === 0) {\r\n    return <div className=\"dashboard\">No transactions found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"card\">\r\n        <h3>Transaction Reports</h3>\r\n        <table className=\"table\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Category</th>\r\n              <th>Type</th>\r\n              <th>Amount</th>\r\n              <th>Note</th>\r\n              <th>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {[...transactions].reverse().map(txn => (\r\n              <tr key={txn.id}>\r\n                <td>{getProductName(txn.productId)}</td>\r\n                <td>{getProductCategory(txn.productId)}</td>\r\n                <td style={{ color: txn.type === 'add' ? 'green' : 'red' }}>\r\n                  {txn.type.toUpperCase()}\r\n                </td>\r\n                <td>{txn.amount}</td>\r\n                <td>{txn.note || '—'}</td>\r\n                <td>{formatDate(txn.date)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reports;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}