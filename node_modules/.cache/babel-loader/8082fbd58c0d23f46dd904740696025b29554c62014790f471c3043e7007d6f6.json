{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selling, setSelling] = useState({}); // { productId: quantity }\n  const [loading, setLoading] = useState(true);\n\n  // Fetch products initially and after sales\n  const fetchProducts = async () => {\n    try {\n      const res = await api.get('/products');\n      setProducts(res.data || []);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n      setProducts([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  // Handle quantity input change for each product\n  const handleQuantityChange = (productId, value) => {\n    var _products$find;\n    const num = Math.max(1, Math.min(parseInt(value) || 1, ((_products$find = products.find(p => p.id === productId)) === null || _products$find === void 0 ? void 0 : _products$find.stock) || 1));\n    setSelling(prev => ({\n      ...prev,\n      [productId]: num\n    }));\n  };\n\n  // Sell product action\n  const sellProduct = async productId => {\n    const quantity = selling[productId] || 1;\n    const product = products.find(p => p.id === productId);\n    if (!product) return alert('Product not found');\n    if (quantity > product.stock) return alert('Quantity exceeds available stock');\n    if (quantity < 1) return alert('Quantity must be at least 1');\n    const sale = {\n      productId,\n      name: product.name,\n      quantity,\n      amount: product.price * quantity,\n      date: new Date().toISOString().split('T')[0]\n    };\n    try {\n      // Record the sale\n      await api.post('/sales', sale);\n\n      // Update product stock on backend\n      await api.put(`/products/${productId}`, {\n        stock: product.stock - quantity\n      });\n\n      // Update local products state immediately\n      setProducts(prev => prev.map(p => p.id === productId ? {\n        ...p,\n        stock: p.stock - quantity\n      } : p));\n\n      // Reset the quantity input for this product\n      setSelling(prev => ({\n        ...prev,\n        [productId]: 1\n      }));\n      alert(`Sold ${quantity} x ${product.name}`);\n    } catch (err) {\n      console.error(err);\n      alert('Failed to complete the sale');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: \"Loading products...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '15px'\n      },\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: 250,\n          padding: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: M\", product.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stock: \", product.stock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: product.stock,\n          value: selling[product.id] || 1,\n          onChange: e => handleQuantityChange(product.id, e.target.value),\n          disabled: product.stock === 0,\n          style: {\n            width: '80px',\n            marginBottom: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sellProduct(product.id),\n          disabled: product.stock === 0,\n          style: {\n            display: 'block',\n            width: '100%'\n          },\n          children: product.stock === 0 ? 'Out of Stock' : 'Sell'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"UC2mw3jp+SM8fs6+e+WQFi8mfb4=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Sales","_s","products","setProducts","selling","setSelling","loading","setLoading","fetchProducts","res","get","data","err","console","error","handleQuantityChange","productId","value","_products$find","num","Math","max","min","parseInt","find","p","id","stock","prev","sellProduct","quantity","product","alert","sale","name","amount","price","date","Date","toISOString","split","post","put","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","gap","width","padding","toFixed","type","onChange","e","target","disabled","marginBottom","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Sales() {\r\n  const [products, setProducts] = useState([]);\r\n  const [selling, setSelling] = useState({}); // { productId: quantity }\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch products initially and after sales\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await api.get('/products');\r\n      setProducts(res.data || []);\r\n    } catch (err) {\r\n      console.error('Failed to fetch products:', err);\r\n      setProducts([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Handle quantity input change for each product\r\n  const handleQuantityChange = (productId, value) => {\r\n    const num = Math.max(1, Math.min(parseInt(value) || 1, products.find(p => p.id === productId)?.stock || 1));\r\n    setSelling(prev => ({ ...prev, [productId]: num }));\r\n  };\r\n\r\n  // Sell product action\r\n  const sellProduct = async (productId) => {\r\n    const quantity = selling[productId] || 1;\r\n    const product = products.find(p => p.id === productId);\r\n\r\n    if (!product) return alert('Product not found');\r\n    if (quantity > product.stock) return alert('Quantity exceeds available stock');\r\n    if (quantity < 1) return alert('Quantity must be at least 1');\r\n\r\n    const sale = {\r\n      productId,\r\n      name: product.name,\r\n      quantity,\r\n      amount: product.price * quantity,\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n\r\n    try {\r\n      // Record the sale\r\n      await api.post('/sales', sale);\r\n\r\n      // Update product stock on backend\r\n      await api.put(`/products/${productId}`, { stock: product.stock - quantity });\r\n\r\n      // Update local products state immediately\r\n      setProducts(prev =>\r\n        prev.map(p => (p.id === productId ? { ...p, stock: p.stock - quantity } : p))\r\n      );\r\n\r\n      // Reset the quantity input for this product\r\n      setSelling(prev => ({ ...prev, [productId]: 1 }));\r\n\r\n      alert(`Sold ${quantity} x ${product.name}`);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Failed to complete the sale');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"dashboard\">Loading products...</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h3>Sales</h3>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '15px' }}>\r\n        {products.map(product => (\r\n          <div key={product.id} className=\"card\" style={{ width: 250, padding: 15 }}>\r\n            <h4>{product.name}</h4>\r\n            <p>Price: M{product.price.toFixed(2)}</p>\r\n            <p>Stock: {product.stock}</p>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max={product.stock}\r\n              value={selling[product.id] || 1}\r\n              onChange={e => handleQuantityChange(product.id, e.target.value)}\r\n              disabled={product.stock === 0}\r\n              style={{ width: '80px', marginBottom: '8px' }}\r\n            />\r\n            <button\r\n              onClick={() => sellProduct(product.id)}\r\n              disabled={product.stock === 0}\r\n              style={{ display: 'block', width: '100%' }}\r\n            >\r\n              {product.stock === 0 ? 'Out of Stock' : 'Sell'}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}