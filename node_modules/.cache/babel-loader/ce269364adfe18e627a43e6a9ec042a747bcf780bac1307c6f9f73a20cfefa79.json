{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001',\n  // Ensure this matches your backend server URL\n  timeout: 15000,\n  // 15-second timeout for slower connections\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Response interceptor for detailed error handling\napi.interceptors.response.use(response => response, async error => {\n  var _error$config, _error$config2, _error$config3, _error$response, _error$response2;\n  console.error('API Error Details:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n    data: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.data,\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    responseData: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    timestamp: new Date().toISOString()\n  });\n  if (error.code === 'ECONNABORTED') {\n    return Promise.reject(new Error('Request timed out. Please verify the server is running at http://localhost:3001.'));\n  }\n  if (!error.response) {\n    // Attempt to ping the server to confirm availability\n    try {\n      await axios.get('http://localhost:3001/ping', {\n        timeout: 5000\n      });\n    } catch (pingError) {\n      return Promise.reject(new Error('Network error. Server at http://localhost:3001 is unreachable. Please check your connection or server status.'));\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","response","use","error","_error$config","_error$config2","_error$config3","_error$response","_error$response2","console","url","config","method","data","message","status","responseData","timestamp","Date","toISOString","code","Promise","reject","Error","get","pingError"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001', // Ensure this matches your backend server URL\r\n  timeout: 15000, // 15-second timeout for slower connections\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Response interceptor for detailed error handling\r\napi.interceptors.response.use(\r\n  response => response,\r\n  async error => {\r\n    console.error('API Error Details:', {\r\n      url: error.config?.url,\r\n      method: error.config?.method,\r\n      data: error.config?.data,\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      responseData: error.response?.data,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n    if (error.code === 'ECONNABORTED') {\r\n      return Promise.reject(new Error('Request timed out. Please verify the server is running at http://localhost:3001.'));\r\n    }\r\n    if (!error.response) {\r\n      // Attempt to ping the server to confirm availability\r\n      try {\r\n        await axios.get('http://localhost:3001/ping', { timeout: 5000 });\r\n      } catch (pingError) {\r\n        return Promise.reject(new Error('Network error. Server at http://localhost:3001 is unreachable. Please check your connection or server status.'));\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAIA,QAAQ,EACpB,MAAME,KAAK,IAAI;EAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,eAAA,EAAAC,gBAAA;EACbC,OAAO,CAACN,KAAK,CAAC,oBAAoB,EAAE;IAClCO,GAAG,GAAAN,aAAA,GAAED,KAAK,CAACQ,MAAM,cAAAP,aAAA,uBAAZA,aAAA,CAAcM,GAAG;IACtBE,MAAM,GAAAP,cAAA,GAAEF,KAAK,CAACQ,MAAM,cAAAN,cAAA,uBAAZA,cAAA,CAAcO,MAAM;IAC5BC,IAAI,GAAAP,cAAA,GAAEH,KAAK,CAACQ,MAAM,cAAAL,cAAA,uBAAZA,cAAA,CAAcO,IAAI;IACxBC,OAAO,EAAEX,KAAK,CAACW,OAAO;IACtBC,MAAM,GAAAR,eAAA,GAAEJ,KAAK,CAACF,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBQ,MAAM;IAC9BC,YAAY,GAAAR,gBAAA,GAAEL,KAAK,CAACF,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBK,IAAI;IAClCI,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACpC,CAAC,CAAC;EACF,IAAIhB,KAAK,CAACiB,IAAI,KAAK,cAAc,EAAE;IACjC,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,kFAAkF,CAAC,CAAC;EACtH;EACA,IAAI,CAACpB,KAAK,CAACF,QAAQ,EAAE;IACnB;IACA,IAAI;MACF,MAAMP,KAAK,CAAC8B,GAAG,CAAC,4BAA4B,EAAE;QAAE1B,OAAO,EAAE;MAAK,CAAC,CAAC;IAClE,CAAC,CAAC,OAAO2B,SAAS,EAAE;MAClB,OAAOJ,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,+GAA+G,CAAC,CAAC;IACnJ;EACF;EACA,OAAOF,OAAO,CAACC,MAAM,CAACnB,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}