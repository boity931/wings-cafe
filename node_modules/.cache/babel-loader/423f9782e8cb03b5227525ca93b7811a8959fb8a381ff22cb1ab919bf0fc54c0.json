{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from './api';\nimport Dashboard from './components/Dashboard';\nimport Navbar from './components/Navbar';\nimport Reports from './components/Reports';\nimport Sales from './components/Sales';\nimport Inventory from './components/Inventory';\nimport Footer from './components/Footer';\nimport logo from './assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [transactions, setTransactions] = useState([]); // Add transactions state\n  const [activeSection, setActiveSection] = useState('dashboard');\n  const [refreshSignal, setRefreshSignal] = useState(0);\n  const fetchData = async () => {\n    try {\n      console.log('Fetching data...'); // Debug start\n      const [productsRes, transactionsRes] = await Promise.all([api.get('/products'), api.get('/transactions')]);\n      setProducts(productsRes.data || []);\n      setTransactions(transactionsRes.data || []);\n      console.log('Fetched products:', productsRes.data);\n      console.log('Fetched transactions:', transactionsRes.data); // Debug transaction data\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      console.log('Fetch failed - using default empty arrays');\n      setProducts([]);\n      setTransactions([]);\n    }\n  };\n\n  // Fetch data on mount and every time refreshSignal changes\n  useEffect(() => {\n    fetchData();\n  }, [refreshSignal]);\n\n  // Update stock after sale\n  const updateProductQuantity = (productId, newStock) => {\n    setProducts(prev => prev.map(p => p.id === productId ? {\n      ...p,\n      stock: newStock\n    } : p));\n  };\n\n  // Trigger refresh for products and reports\n  const handleRefresh = () => {\n    fetchData(); // Re-fetch data\n    setRefreshSignal(prev => prev + 1);\n    console.log('Refresh triggered, new signal:', prev + 1); // Debug refresh\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    style: {\n      minHeight: '100vh',\n      position: 'relative',\n      paddingBottom: '60px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      logo: logo,\n      setActiveSection: setActiveSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [activeSection === 'dashboard' && /*#__PURE__*/_jsxDEV(Dashboard, {\n          products: products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 45\n        }, this), activeSection === 'inventory' && /*#__PURE__*/_jsxDEV(Inventory, {\n          products: products,\n          onChanged: handleRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), activeSection === 'reports' && /*#__PURE__*/_jsxDEV(Reports, {\n          refreshSignal: refreshSignal,\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), activeSection === 'sales' && /*#__PURE__*/_jsxDEV(Sales, {\n          products: products,\n          updateProductQuantity: updateProductQuantity,\n          onSold: handleRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z+hm094yILN4lTr65H4nTTPNLCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","api","Dashboard","Navbar","Reports","Sales","Inventory","Footer","logo","jsxDEV","_jsxDEV","App","_s","products","setProducts","transactions","setTransactions","activeSection","setActiveSection","refreshSignal","setRefreshSignal","fetchData","console","log","productsRes","transactionsRes","Promise","all","get","data","error","updateProductQuantity","productId","newStock","prev","map","p","id","stock","handleRefresh","className","style","minHeight","position","paddingBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","onChanged","onSold","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from './api';\r\nimport Dashboard from './components/Dashboard';\r\nimport Navbar from './components/Navbar';\r\nimport Reports from './components/Reports';\r\nimport Sales from './components/Sales';\r\nimport Inventory from './components/Inventory';\r\nimport Footer from './components/Footer';\r\nimport logo from './assets/logo.png';\r\n\r\nfunction App() {\r\n  const [products, setProducts] = useState([]);\r\n  const [transactions, setTransactions] = useState([]); // Add transactions state\r\n  const [activeSection, setActiveSection] = useState('dashboard');\r\n  const [refreshSignal, setRefreshSignal] = useState(0);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      console.log('Fetching data...'); // Debug start\r\n      const [productsRes, transactionsRes] = await Promise.all([\r\n        api.get('/products'),\r\n        api.get('/transactions'),\r\n      ]);\r\n      setProducts(productsRes.data || []);\r\n      setTransactions(transactionsRes.data || []);\r\n      console.log('Fetched products:', productsRes.data);\r\n      console.log('Fetched transactions:', transactionsRes.data); // Debug transaction data\r\n    } catch (error) {\r\n      console.error('Failed to fetch data:', error);\r\n      console.log('Fetch failed - using default empty arrays');\r\n      setProducts([]);\r\n      setTransactions([]);\r\n    }\r\n  };\r\n\r\n  // Fetch data on mount and every time refreshSignal changes\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [refreshSignal]);\r\n\r\n  // Update stock after sale\r\n  const updateProductQuantity = (productId, newStock) => {\r\n    setProducts(prev =>\r\n      prev.map(p => (p.id === productId ? { ...p, stock: newStock } : p))\r\n    );\r\n  };\r\n\r\n  // Trigger refresh for products and reports\r\n  const handleRefresh = () => {\r\n    fetchData(); // Re-fetch data\r\n    setRefreshSignal(prev => prev + 1);\r\n    console.log('Refresh triggered, new signal:', prev + 1); // Debug refresh\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\" style={{ minHeight: '100vh', position: 'relative', paddingBottom: '60px' }}>\r\n      <Navbar logo={logo} setActiveSection={setActiveSection} />\r\n      <div className=\"main-content\">\r\n        <div className=\"content\">\r\n          {activeSection === 'dashboard' && <Dashboard products={products} />}\r\n          {activeSection === 'inventory' && (\r\n            <Inventory products={products} onChanged={handleRefresh} />\r\n          )}\r\n          {activeSection === 'reports' && (\r\n            <Reports refreshSignal={refreshSignal} transactions={transactions} />\r\n          )}\r\n          {activeSection === 'sales' && (\r\n            <Sales\r\n              products={products}\r\n              updateProductQuantity={updateProductQuantity}\r\n              onSold={handleRefresh}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,WAAW,CAAC;EAC/D,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAErD,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;MACjC,MAAM,CAACC,WAAW,EAAEC,eAAe,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACvD1B,GAAG,CAAC2B,GAAG,CAAC,WAAW,CAAC,EACpB3B,GAAG,CAAC2B,GAAG,CAAC,eAAe,CAAC,CACzB,CAAC;MACFd,WAAW,CAACU,WAAW,CAACK,IAAI,IAAI,EAAE,CAAC;MACnCb,eAAe,CAACS,eAAe,CAACI,IAAI,IAAI,EAAE,CAAC;MAC3CP,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,WAAW,CAACK,IAAI,CAAC;MAClDP,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,eAAe,CAACI,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CR,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxDT,WAAW,CAAC,EAAE,CAAC;MACfE,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACdsB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMY,qBAAqB,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;IACrDnB,WAAW,CAACoB,IAAI,IACdA,IAAI,CAACC,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,SAAS,GAAG;MAAE,GAAGI,CAAC;MAAEE,KAAK,EAAEL;IAAS,CAAC,GAAGG,CAAE,CACpE,CAAC;EACH,CAAC;;EAED;EACA,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1BlB,SAAS,CAAC,CAAC,CAAC,CAAC;IACbD,gBAAgB,CAACc,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAClCZ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEW,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,oBACExB,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,QAAQ,EAAE,UAAU;MAAEC,aAAa,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9FnC,OAAA,CAACP,MAAM;MAACK,IAAI,EAAEA,IAAK;MAACU,gBAAgB,EAAEA;IAAiB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1DvC,OAAA;MAAK8B,SAAS,EAAC,cAAc;MAAAK,QAAA,eAC3BnC,OAAA;QAAK8B,SAAS,EAAC,SAAS;QAAAK,QAAA,GACrB5B,aAAa,KAAK,WAAW,iBAAIP,OAAA,CAACR,SAAS;UAACW,QAAQ,EAAEA;QAAS;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAClEhC,aAAa,KAAK,WAAW,iBAC5BP,OAAA,CAACJ,SAAS;UAACO,QAAQ,EAAEA,QAAS;UAACqC,SAAS,EAAEX;QAAc;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC3D,EACAhC,aAAa,KAAK,SAAS,iBAC1BP,OAAA,CAACN,OAAO;UAACe,aAAa,EAAEA,aAAc;UAACJ,YAAY,EAAEA;QAAa;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACrE,EACAhC,aAAa,KAAK,OAAO,iBACxBP,OAAA,CAACL,KAAK;UACJQ,QAAQ,EAAEA,QAAS;UACnBkB,qBAAqB,EAAEA,qBAAsB;UAC7CoB,MAAM,EAAEZ;QAAc;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNvC,OAAA,CAACH,MAAM;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACrC,EAAA,CApEQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAsEZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}