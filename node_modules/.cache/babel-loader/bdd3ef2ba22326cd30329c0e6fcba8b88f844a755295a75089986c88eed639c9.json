{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api'; // Your axios instance or json-server API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selling, setSelling] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  // Fetch products\n  const fetchProducts = async () => {\n    try {\n      const res = await api.get('/products');\n      setProducts(res.data || []);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n      alert('Failed to fetch products. Check your server.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const handleQuantityChange = (productId, value) => {\n    const product = products.find(p => p.id === productId);\n    const stock = Number((product === null || product === void 0 ? void 0 : product.quantity) || 0);\n    const num = Math.max(1, Math.min(parseInt(value, 10) || 1, stock));\n    setSelling(prev => ({\n      ...prev,\n      [productId]: num\n    }));\n  };\n  const sellProduct = async productId => {\n    const quantity = selling[productId] || 1;\n    const product = products.find(p => p.id === productId);\n    if (!product) return alert('Product not found');\n    if (quantity > product.quantity) return alert('Quantity exceeds available stock');\n    const sale = {\n      productId,\n      name: product.name,\n      quantity,\n      amount: product.price * quantity,\n      date: new Date().toISOString().split('T')[0]\n    };\n    try {\n      // Record sale\n      await api.post('/transactions', sale);\n\n      // Update product quantity\n      const updatedProduct = {\n        ...product,\n        quantity: product.quantity - quantity\n      };\n      await api.put(`/products/${productId}`, updatedProduct);\n\n      // Update local state\n      setProducts(prev => prev.map(p => p.id === productId ? updatedProduct : p));\n      setSelling(prev => ({\n        ...prev,\n        [productId]: 1\n      }));\n      alert(`Sold ${quantity} x ${product.name} successfully!`);\n    } catch (err) {\n      console.error('Sale failed:', err);\n      alert('Sale failed. Check console for details.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading products...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 15\n      },\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: 250,\n          padding: 15,\n          border: '1px solid #ccc',\n          borderRadius: 8\n        },\n        children: [product.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name,\n          style: {\n            width: '100%',\n            height: 150,\n            objectFit: 'cover',\n            marginBottom: 10\n          },\n          onError: e => e.target.src = 'https://via.placeholder.com/150?text=No+Image'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: M\", product.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stock: \", product.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: product.quantity,\n          value: selling[product.id] || 1,\n          onChange: e => handleQuantityChange(product.id, e.target.value),\n          disabled: product.quantity === 0,\n          style: {\n            width: '80px',\n            marginBottom: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sellProduct(product.id),\n          disabled: product.quantity === 0,\n          style: {\n            width: '100%',\n            backgroundColor: product.quantity === 0 ? '#ccc' : '#007bff',\n            color: '#fff',\n            border: 'none',\n            padding: '8px',\n            cursor: product.quantity === 0 ? 'not-allowed' : 'pointer'\n          },\n          children: product.quantity === 0 ? 'Out of Stock' : 'Sell'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"UC2mw3jp+SM8fs6+e+WQFi8mfb4=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Sales","_s","products","setProducts","selling","setSelling","loading","setLoading","fetchProducts","res","get","data","err","console","error","alert","handleQuantityChange","productId","value","product","find","p","id","stock","Number","quantity","num","Math","max","min","parseInt","prev","sellProduct","sale","name","amount","price","date","Date","toISOString","split","post","updatedProduct","put","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","flexWrap","gap","width","padding","border","borderRadius","image","src","alt","height","objectFit","marginBottom","onError","e","target","toFixed","type","onChange","disabled","onClick","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api'; // Your axios instance or json-server API\r\n\r\nfunction Sales() {\r\n  const [products, setProducts] = useState([]);\r\n  const [selling, setSelling] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch products\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await api.get('/products');\r\n      setProducts(res.data || []);\r\n    } catch (err) {\r\n      console.error('Failed to fetch products:', err);\r\n      alert('Failed to fetch products. Check your server.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleQuantityChange = (productId, value) => {\r\n    const product = products.find(p => p.id === productId);\r\n    const stock = Number(product?.quantity || 0);\r\n    const num = Math.max(1, Math.min(parseInt(value, 10) || 1, stock));\r\n    setSelling(prev => ({ ...prev, [productId]: num }));\r\n  };\r\n\r\n  const sellProduct = async (productId) => {\r\n    const quantity = selling[productId] || 1;\r\n    const product = products.find(p => p.id === productId);\r\n    if (!product) return alert('Product not found');\r\n    if (quantity > product.quantity) return alert('Quantity exceeds available stock');\r\n\r\n    const sale = {\r\n      productId,\r\n      name: product.name,\r\n      quantity,\r\n      amount: product.price * quantity,\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n\r\n    try {\r\n      // Record sale\r\n      await api.post('/transactions', sale);\r\n\r\n      // Update product quantity\r\n      const updatedProduct = { ...product, quantity: product.quantity - quantity };\r\n      await api.put(`/products/${productId}`, updatedProduct);\r\n\r\n      // Update local state\r\n      setProducts(prev =>\r\n        prev.map(p => (p.id === productId ? updatedProduct : p))\r\n      );\r\n      setSelling(prev => ({ ...prev, [productId]: 1 }));\r\n\r\n      alert(`Sold ${quantity} x ${product.name} successfully!`);\r\n    } catch (err) {\r\n      console.error('Sale failed:', err);\r\n      alert('Sale failed. Check console for details.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading products...</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h3>Sales</h3>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: 15 }}>\r\n        {products.map(product => (\r\n          <div\r\n            key={product.id}\r\n            className=\"card\"\r\n            style={{ width: 250, padding: 15, border: '1px solid #ccc', borderRadius: 8 }}\r\n          >\r\n            {product.image && (\r\n              <img\r\n                src={product.image}\r\n                alt={product.name}\r\n                style={{ width: '100%', height: 150, objectFit: 'cover', marginBottom: 10 }}\r\n                onError={(e) => e.target.src = 'https://via.placeholder.com/150?text=No+Image'}\r\n              />\r\n            )}\r\n            <h4>{product.name}</h4>\r\n            <p>Price: M{product.price.toFixed(2)}</p>\r\n            <p>Stock: {product.quantity}</p>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max={product.quantity}\r\n              value={selling[product.id] || 1}\r\n              onChange={e => handleQuantityChange(product.id, e.target.value)}\r\n              disabled={product.quantity === 0}\r\n              style={{ width: '80px', marginBottom: 8 }}\r\n            />\r\n            <button\r\n              onClick={() => sellProduct(product.id)}\r\n              disabled={product.quantity === 0}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: product.quantity === 0 ? '#ccc' : '#007bff',\r\n                color: '#fff',\r\n                border: 'none',\r\n                padding: '8px',\r\n                cursor: product.quantity === 0 ? 'not-allowed' : 'pointer',\r\n              }}\r\n            >\r\n              {product.quantity === 0 ? 'Out of Stock' : 'Sell'}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}