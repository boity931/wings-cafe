{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inventory({\n  products: initialProducts,\n  onChanged\n}) {\n  _s();\n  const [products, setProducts] = useState(initialProducts || []);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    description: '',\n    category: '',\n    price: '',\n    initialQuantity: ''\n  });\n  const [uiData, setUIData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingStock, setEditingStock] = useState({}); // { productId: 'newStockValue' }\n\n  useEffect(() => {\n    setProducts(initialProducts || []);\n    setLoading(false);\n  }, [initialProducts]);\n  const fetchProducts = async () => {\n    try {\n      const res = await api.get('/products');\n      const staticProducts = res.data || [];\n      const savedUIData = localStorage.getItem('uiData') ? JSON.parse(localStorage.getItem('uiData')) : [];\n      setUIData(savedUIData);\n      const merged = [...staticProducts];\n      savedUIData.forEach(uiProduct => {\n        if (!merged.some(p => p.id === uiProduct.id || p.name === uiProduct.name && p.price === uiProduct.price)) {\n          merged.push({\n            ...uiProduct,\n            id: uiProduct.id || Date.now() + Math.random().toString(36).substr(2, 9)\n          });\n        }\n      });\n      setProducts(merged);\n      if (onChanged) onChanged();\n    } catch (err) {\n      console.error('Error fetching products:', err);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewProduct(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const addProduct = async e => {\n    e.preventDefault();\n    try {\n      const productToAdd = {\n        name: newProduct.name,\n        description: newProduct.description,\n        category: newProduct.category,\n        price: parseFloat(newProduct.price),\n        stock: parseInt(newProduct.initialQuantity, 10)\n      };\n      const res = await api.post('/products', productToAdd);\n      const updatedStatic = res.data;\n      const updatedUIData = [...uiData, {\n        ...productToAdd,\n        id: updatedStatic.id,\n        timestamp: new Date().toISOString()\n      }];\n      setUIData(updatedUIData);\n      localStorage.setItem('uiData', JSON.stringify(updatedUIData));\n      setNewProduct({\n        name: '',\n        description: '',\n        category: '',\n        price: '',\n        initialQuantity: ''\n      }); // Clear form\n      fetchProducts();\n    } catch (err) {\n      console.error(err);\n      alert('Failed to add to static database, adding to UI only');\n      const updatedUIData = [...uiData, {\n        ...newProduct,\n        id: Date.now(),\n        timestamp: new Date().toISOString(),\n        stock: parseInt(newProduct.initialQuantity, 10)\n      }];\n      setUIData(updatedUIData);\n      localStorage.setItem('uiData', JSON.stringify(updatedUIData));\n      setNewProduct({\n        name: '',\n        description: '',\n        category: '',\n        price: '',\n        initialQuantity: ''\n      }); // Clear form\n      fetchProducts();\n    }\n  };\n  const exportUIData = () => {\n    const dataStr = JSON.stringify(uiData, null, 2);\n    const blob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'uiData.json';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Handle stock input changes for editing\n  const handleStockEditChange = (productId, value) => {\n    // Only allow digits (and empty string for clearing)\n    if (value === '' || /^\\d+$/.test(value)) {\n      setEditingStock(prev => ({\n        ...prev,\n        [productId]: value\n      }));\n    }\n  };\n\n  // Save the edited stock to backend and update UI\n  const saveStockEdit = async productId => {\n    const newStockStr = editingStock[productId];\n    if (newStockStr === undefined) return;\n    const newStock = parseInt(newStockStr, 10);\n    if (isNaN(newStock) || newStock < 0) {\n      alert('Invalid stock quantity');\n      return;\n    }\n    try {\n      // Update product stock on backend\n      await api.put(`/products/${productId}`, {\n        stock: newStock\n      });\n\n      // Update products state locally\n      setProducts(prevProducts => prevProducts.map(p => p.id === productId ? {\n        ...p,\n        stock: newStock\n      } : p));\n\n      // Clear editing state for this product\n      setEditingStock(prev => {\n        const newEditing = {\n          ...prev\n        };\n        delete newEditing[productId];\n        return newEditing;\n      });\n      if (onChanged) onChanged();\n    } catch (error) {\n      console.error('Failed to update stock:', error);\n      alert('Error updating stock on server');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: \"Loading inventory...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card inventory-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Product Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table product-inventory\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => {\n            const editingValue = editingStock[product.id];\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: product.stock < 10 ? 'low' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.description || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.category || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: `M${parseFloat(product.price).toFixed(2)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editingValue !== undefined ? editingValue : product.stock,\n                  onChange: e => handleStockEditChange(product.id, e.target.value),\n                  style: {\n                    width: '60px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => saveStockEdit(product.id),\n                  disabled: editingValue === undefined || editingValue === String(product.stock),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, product.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card inventory-form\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addProduct,\n        className: \"add-product-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: newProduct.name,\n          onChange: handleInputChange,\n          placeholder: \"Product Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: newProduct.description,\n          onChange: handleInputChange,\n          placeholder: \"Description\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          value: newProduct.category,\n          onChange: handleInputChange,\n          placeholder: \"Category\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"price\",\n          value: newProduct.price,\n          onChange: handleInputChange,\n          placeholder: \"Price\",\n          step: \"0.01\",\n          min: \"0\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"initialQuantity\",\n          value: newProduct.initialQuantity,\n          onChange: handleInputChange,\n          placeholder: \"Initial Quantity\",\n          min: \"0\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: exportUIData,\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Export UI Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(Inventory, \"SBvw43IvVEkw42aUBfrmSHFjRH8=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Inventory","products","initialProducts","onChanged","_s","setProducts","newProduct","setNewProduct","name","description","category","price","initialQuantity","uiData","setUIData","loading","setLoading","editingStock","setEditingStock","fetchProducts","res","get","staticProducts","data","savedUIData","localStorage","getItem","JSON","parse","merged","forEach","uiProduct","some","p","id","push","Date","now","Math","random","toString","substr","err","console","error","handleInputChange","e","value","target","prev","addProduct","preventDefault","productToAdd","parseFloat","stock","parseInt","post","updatedStatic","updatedUIData","timestamp","toISOString","setItem","stringify","alert","exportUIData","dataStr","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","handleStockEditChange","productId","test","saveStockEdit","newStockStr","undefined","newStock","isNaN","put","prevProducts","map","newEditing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","product","editingValue","toFixed","onChange","style","width","onClick","disabled","String","marginTop","onSubmit","placeholder","required","step","min","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Inventory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Inventory({ products: initialProducts, onChanged }) {\r\n  const [products, setProducts] = useState(initialProducts || []);\r\n  const [newProduct, setNewProduct] = useState({ name: '', description: '', category: '', price: '', initialQuantity: '' });\r\n  const [uiData, setUIData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editingStock, setEditingStock] = useState({}); // { productId: 'newStockValue' }\r\n\r\n  useEffect(() => {\r\n    setProducts(initialProducts || []);\r\n    setLoading(false);\r\n  }, [initialProducts]);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await api.get('/products');\r\n      const staticProducts = res.data || [];\r\n      const savedUIData = localStorage.getItem('uiData') ? JSON.parse(localStorage.getItem('uiData')) : [];\r\n      setUIData(savedUIData);\r\n\r\n      const merged = [...staticProducts];\r\n      savedUIData.forEach(uiProduct => {\r\n        if (!merged.some(p => p.id === uiProduct.id || (p.name === uiProduct.name && p.price === uiProduct.price))) {\r\n          merged.push({ ...uiProduct, id: uiProduct.id || Date.now() + Math.random().toString(36).substr(2, 9) });\r\n        }\r\n      });\r\n      setProducts(merged);\r\n      if (onChanged) onChanged();\r\n    } catch (err) {\r\n      console.error('Error fetching products:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewProduct(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addProduct = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const productToAdd = {\r\n        name: newProduct.name,\r\n        description: newProduct.description,\r\n        category: newProduct.category,\r\n        price: parseFloat(newProduct.price),\r\n        stock: parseInt(newProduct.initialQuantity, 10),\r\n      };\r\n      const res = await api.post('/products', productToAdd);\r\n      const updatedStatic = res.data;\r\n      const updatedUIData = [...uiData, { ...productToAdd, id: updatedStatic.id, timestamp: new Date().toISOString() }];\r\n      setUIData(updatedUIData);\r\n      localStorage.setItem('uiData', JSON.stringify(updatedUIData));\r\n      setNewProduct({ name: '', description: '', category: '', price: '', initialQuantity: '' }); // Clear form\r\n      fetchProducts();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Failed to add to static database, adding to UI only');\r\n      const updatedUIData = [...uiData, { ...newProduct, id: Date.now(), timestamp: new Date().toISOString(), stock: parseInt(newProduct.initialQuantity, 10) }];\r\n      setUIData(updatedUIData);\r\n      localStorage.setItem('uiData', JSON.stringify(updatedUIData));\r\n      setNewProduct({ name: '', description: '', category: '', price: '', initialQuantity: '' }); // Clear form\r\n      fetchProducts();\r\n    }\r\n  };\r\n\r\n  const exportUIData = () => {\r\n    const dataStr = JSON.stringify(uiData, null, 2);\r\n    const blob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'uiData.json';\r\n    link.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Handle stock input changes for editing\r\n  const handleStockEditChange = (productId, value) => {\r\n    // Only allow digits (and empty string for clearing)\r\n    if (value === '' || /^\\d+$/.test(value)) {\r\n      setEditingStock(prev => ({ ...prev, [productId]: value }));\r\n    }\r\n  };\r\n\r\n  // Save the edited stock to backend and update UI\r\n  const saveStockEdit = async (productId) => {\r\n    const newStockStr = editingStock[productId];\r\n    if (newStockStr === undefined) return;\r\n    const newStock = parseInt(newStockStr, 10);\r\n    if (isNaN(newStock) || newStock < 0) {\r\n      alert('Invalid stock quantity');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Update product stock on backend\r\n      await api.put(`/products/${productId}`, { stock: newStock });\r\n\r\n      // Update products state locally\r\n      setProducts(prevProducts =>\r\n        prevProducts.map(p => p.id === productId ? { ...p, stock: newStock } : p)\r\n      );\r\n\r\n      // Clear editing state for this product\r\n      setEditingStock(prev => {\r\n        const newEditing = { ...prev };\r\n        delete newEditing[productId];\r\n        return newEditing;\r\n      });\r\n\r\n      if (onChanged) onChanged();\r\n    } catch (error) {\r\n      console.error('Failed to update stock:', error);\r\n      alert('Error updating stock on server');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"dashboard\">Loading inventory...</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"card inventory-table\">\r\n        <h3>Product Inventory</h3>\r\n        <table className=\"table product-inventory\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n              <th>Category</th>\r\n              <th>Price</th>\r\n              <th>Stock</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map(product => {\r\n              const editingValue = editingStock[product.id];\r\n              return (\r\n                <tr key={product.id} className={product.stock < 10 ? 'low' : ''}>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.description || 'N/A'}</td>\r\n                  <td>{product.category || 'N/A'}</td>\r\n                  <td>{`M${parseFloat(product.price).toFixed(2)}`}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editingValue !== undefined ? editingValue : product.stock}\r\n                      onChange={e => handleStockEditChange(product.id, e.target.value)}\r\n                      style={{ width: '60px' }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => saveStockEdit(product.id)}\r\n                      disabled={\r\n                        editingValue === undefined || editingValue === String(product.stock)\r\n                      }\r\n                    >\r\n                      Save\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"card inventory-form\" style={{ marginTop: '20px' }}>\r\n        <h3>Add New Product</h3>\r\n        <form onSubmit={addProduct} className=\"add-product-form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={newProduct.name}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Product Name\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={newProduct.description}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Description\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"category\"\r\n            value={newProduct.category}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Category\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={newProduct.price}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Price\"\r\n            step=\"0.01\"\r\n            min=\"0\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"initialQuantity\"\r\n            value={newProduct.initialQuantity}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Initial Quantity\"\r\n            min=\"0\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Add Product</button>\r\n          <button type=\"button\" onClick={exportUIData} style={{ marginLeft: '10px' }}>Export UI Data</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inventory;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}