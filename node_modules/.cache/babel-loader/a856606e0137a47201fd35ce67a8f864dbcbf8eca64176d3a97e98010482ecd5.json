{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales({\n  products = [],\n  updateProductQuantityOrPrice,\n  onSold\n}) {\n  _s();\n  const [selling, setSelling] = useState({});\n  useEffect(() => {\n    // Initialize selling quantities so new products also get a starting value\n    const init = {};\n    products.forEach(p => {\n      init[p.id] = 1;\n    });\n    setSelling(init);\n  }, [products]);\n  const handleQuantityChange = (productId, value) => {\n    const product = products.find(p => p.id === productId);\n    if (!product) {\n      console.warn(`handleQuantityChange: product with id ${productId} not found`);\n      return;\n    }\n    const quantityAllowed = Number(product.quantity || 0);\n    let num = parseInt(value, 10);\n    if (isNaN(num) || num < 1) num = 1;\n    if (num > quantityAllowed) num = quantityAllowed;\n    setSelling(prev => ({\n      ...prev,\n      [productId]: num\n    }));\n  };\n  const sellProduct = async productId => {\n    const qtyToSell = selling[productId] || 1;\n    const product = products.find(p => p.id === productId);\n    if (!product) {\n      alert('Product not found');\n      return;\n    }\n    if (qtyToSell > product.quantity) {\n      alert(`Quantity (${qtyToSell}) exceeds available quantity (${product.quantity}).`);\n      return;\n    }\n    const transactionData = {\n      type: 'deduct',\n      amount: Number(qtyToSell),\n      note: 'sold',\n      productId,\n      date: new Date().toISOString().split('T')[0]\n    };\n    try {\n      console.log('Selling product:', productId, 'quantity:', qtyToSell);\n      // You can test if POST /transaction is supported:\n      // await api.post(`/products/${productId}/transaction`, transactionData);\n\n      const updatedQuantity = product.quantity - qtyToSell;\n      const updatedProduct = {\n        ...product,\n        quantity: updatedQuantity\n      };\n      console.log('PUT to /products/' + productId, updatedProduct);\n      const res = await api.put(`/products/${productId}`, updatedProduct);\n      console.log('Response from PUT:', res);\n      updateProductQuantityOrPrice(productId, {\n        quantity: updatedQuantity\n      });\n      if (onSold) onSold();\n      setSelling(prev => ({\n        ...prev,\n        [productId]: 1\n      }));\n      alert(`Sold ${qtyToSell} x ${product.name} successfully! Total: M${(product.price * qtyToSell).toFixed(2)}`);\n    } catch (err) {\n      console.error('Sale failed error:', err);\n      if (err.response) {\n        console.error('err.response.data:', err.response.data);\n        switch (err.response.status) {\n          case 400:\n            alert('Invalid sale data. Please check the quantity.');\n            break;\n          case 404:\n            alert('Product not found on server.');\n            break;\n          case 500:\n            alert('Server error. Please try again later.');\n            break;\n          default:\n            alert('Sale failed. Check console for details.');\n        }\n      } else if (err.request) {\n        console.error('err.request (no response):', err.request);\n        alert('Network error: no response from server.');\n      } else {\n        alert('Network error. Please check your connection.');\n      }\n    }\n  };\n  if (products.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No products available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 15\n      },\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: 250,\n          padding: 15,\n          border: '1px solid #ccc',\n          borderRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: M\", Number(product.price || 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", product.quantity || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: product.quantity || 0,\n          value: selling[product.id] || 1,\n          onChange: e => handleQuantityChange(product.id, e.target.value),\n          disabled: product.quantity === 0,\n          style: {\n            width: '80px',\n            marginBottom: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sellProduct(product.id),\n          disabled: product.quantity === 0,\n          style: {\n            width: '100%',\n            backgroundColor: product.quantity === 0 ? '#ccc' : '#007bff',\n            color: '#fff',\n            border: 'none',\n            padding: '8px',\n            cursor: product.quantity === 0 ? 'not-allowed' : 'pointer'\n          },\n          children: product.quantity === 0 ? 'Out of Stock' : 'Sell'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"J9cZGgEFqPb1Gyk6Iv2rKeX+Ju0=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Sales","products","updateProductQuantityOrPrice","onSold","_s","selling","setSelling","init","forEach","p","id","handleQuantityChange","productId","value","product","find","console","warn","quantityAllowed","Number","quantity","num","parseInt","isNaN","prev","sellProduct","qtyToSell","alert","transactionData","type","amount","note","date","Date","toISOString","split","log","updatedQuantity","updatedProduct","res","put","name","price","toFixed","err","error","response","data","status","request","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","flexWrap","gap","map","width","padding","border","borderRadius","min","max","onChange","e","target","disabled","marginBottom","onClick","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Sales({ products = [], updateProductQuantityOrPrice, onSold }) {\r\n  const [selling, setSelling] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Initialize selling quantities so new products also get a starting value\r\n    const init = {};\r\n    products.forEach(p => {\r\n      init[p.id] = 1;\r\n    });\r\n    setSelling(init);\r\n  }, [products]);\r\n\r\n  const handleQuantityChange = (productId, value) => {\r\n    const product = products.find(p => p.id === productId);\r\n    if (!product) {\r\n      console.warn(`handleQuantityChange: product with id ${productId} not found`);\r\n      return;\r\n    }\r\n    const quantityAllowed = Number(product.quantity || 0);\r\n    let num = parseInt(value, 10);\r\n    if (isNaN(num) || num < 1) num = 1;\r\n    if (num > quantityAllowed) num = quantityAllowed;\r\n    setSelling(prev => ({ ...prev, [productId]: num }));\r\n  };\r\n\r\n  const sellProduct = async (productId) => {\r\n    const qtyToSell = selling[productId] || 1;\r\n    const product = products.find(p => p.id === productId);\r\n    if (!product) {\r\n      alert('Product not found');\r\n      return;\r\n    }\r\n    if (qtyToSell > product.quantity) {\r\n      alert(`Quantity (${qtyToSell}) exceeds available quantity (${product.quantity}).`);\r\n      return;\r\n    }\r\n\r\n    const transactionData = {\r\n      type: 'deduct',\r\n      amount: Number(qtyToSell),\r\n      note: 'sold',\r\n      productId,\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n\r\n    try {\r\n      console.log('Selling product:', productId, 'quantity:', qtyToSell);\r\n      // You can test if POST /transaction is supported:\r\n      // await api.post(`/products/${productId}/transaction`, transactionData);\r\n\r\n      const updatedQuantity = product.quantity - qtyToSell;\r\n      const updatedProduct = { ...product, quantity: updatedQuantity };\r\n      console.log('PUT to /products/' + productId, updatedProduct);\r\n      const res = await api.put(`/products/${productId}`, updatedProduct);\r\n      console.log('Response from PUT:', res);\r\n\r\n      updateProductQuantityOrPrice(productId, { quantity: updatedQuantity });\r\n      if (onSold) onSold();\r\n      setSelling(prev => ({ ...prev, [productId]: 1 }));\r\n      alert(`Sold ${qtyToSell} x ${product.name} successfully! Total: M${(product.price * qtyToSell).toFixed(2)}`);\r\n    } catch (err) {\r\n      console.error('Sale failed error:', err);\r\n      if (err.response) {\r\n        console.error('err.response.data:', err.response.data);\r\n        switch (err.response.status) {\r\n          case 400:\r\n            alert('Invalid sale data. Please check the quantity.');\r\n            break;\r\n          case 404:\r\n            alert('Product not found on server.');\r\n            break;\r\n          case 500:\r\n            alert('Server error. Please try again later.');\r\n            break;\r\n          default:\r\n            alert('Sale failed. Check console for details.');\r\n        }\r\n      } else if (err.request) {\r\n        console.error('err.request (no response):', err.request);\r\n        alert('Network error: no response from server.');\r\n      } else {\r\n        alert('Network error. Please check your connection.');\r\n      }\r\n    }\r\n  };\r\n\r\n  if (products.length === 0) return <div>No products available</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h3>Sales</h3>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: 15 }}>\r\n        {products.map(product => (\r\n          <div\r\n            key={product.id}\r\n            className=\"card\"\r\n            style={{ width: 250, padding: 15, border: '1px solid #ccc', borderRadius: 8 }}\r\n          >\r\n            <h4>{product.name}</h4>\r\n            <p>Price: M{Number(product.price || 0).toFixed(2)}</p>\r\n            <p>Quantity: {product.quantity || 0}</p>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max={product.quantity || 0}\r\n              value={selling[product.id] || 1}\r\n              onChange={e => handleQuantityChange(product.id, e.target.value)}\r\n              disabled={product.quantity === 0}\r\n              style={{ width: '80px', marginBottom: 8 }}\r\n            />\r\n            <button\r\n              onClick={() => sellProduct(product.id)}\r\n              disabled={product.quantity === 0}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: product.quantity === 0 ? '#ccc' : '#007bff',\r\n                color: '#fff',\r\n                border: 'none',\r\n                padding: '8px',\r\n                cursor: product.quantity === 0 ? 'not-allowed' : 'pointer',\r\n              }}\r\n            >\r\n              {product.quantity === 0 ? 'Out of Stock' : 'Sell'}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}