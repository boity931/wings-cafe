{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\wings-cafe\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales({\n  products: initialProducts\n}) {\n  _s();\n  var _products$find;\n  const [salesData, setSalesData] = useState([]);\n  const [totalSales, setTotalSales] = useState(0);\n  const [filterDate, setFilterDate] = useState('');\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [products, setProducts] = useState(initialProducts || []);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setProducts(initialProducts || []);\n    setLoading(false);\n  }, [initialProducts]);\n  const fetchSales = async () => {\n    try {\n      const res = await api.get('/sales' + (filterDate ? `?date=${filterDate}` : ''));\n      const sales = res.data || [];\n      setSalesData(sales);\n      const total = sales.reduce((sum, sale) => sum + parseFloat(sale.amount || 0), 0);\n      setTotalSales(total);\n    } catch (err) {\n      console.error('Error fetching sales:', err);\n    }\n  };\n  useEffect(() => {\n    fetchSales();\n  }, [filterDate]);\n  const sellProduct = async e => {\n    e.preventDefault();\n    const qty = parseInt(quantity, 10);\n    if (!selectedProduct || qty <= 0) {\n      alert('Please select a product and enter a valid quantity.');\n      return;\n    }\n    const product = products.find(p => p.id === selectedProduct);\n    if (!product || product.stock < qty) {\n      alert('Insufficient stock or invalid product.');\n      return;\n    }\n    try {\n      const saleAmount = parseFloat(product.price) * qty;\n      const saleData = {\n        productId: selectedProduct,\n        name: product.name,\n        quantity: qty,\n        amount: saleAmount,\n        date: new Date().toISOString().split('T')[0] // Format: YYYY-MM-DD\n      };\n      await api.post('/sales', saleData);\n\n      // Update product stock in local state\n      const updatedProducts = products.map(p => p.id === selectedProduct ? {\n        ...p,\n        stock: p.stock - qty\n      } : p);\n      setProducts(updatedProducts);\n\n      // Update localStorage UI data\n      let uiData = JSON.parse(localStorage.getItem('uiData') || '[]');\n      const uiIndex = uiData.findIndex(p => p.id === selectedProduct);\n      if (uiIndex !== -1) {\n        uiData[uiIndex].stock -= qty;\n      } else {\n        uiData.push({\n          ...product,\n          stock: product.stock - qty\n        });\n      }\n      localStorage.setItem('uiData', JSON.stringify(uiData));\n\n      // Update sales state\n      setSalesData([...salesData, saleData]);\n      setTotalSales(prev => prev + saleAmount);\n      setQuantity(1);\n      setSelectedProduct('');\n    } catch (err) {\n      console.error('Error processing sale:', err);\n      alert('Failed to record sale. Please try again.');\n    }\n  };\n  const exportSales = () => {\n    const csv = [['Date', 'Product', 'Quantity', 'Amount'], ...salesData.map(s => [s.date, s.name, s.quantity, s.amount].join(','))].join('\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'sales.csv';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  const maxQuantity = selectedProduct ? ((_products$find = products.find(p => p.id === selectedProduct)) === null || _products$find === void 0 ? void 0 : _products$find.stock) || 0 : 0;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: \"Loading sales...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sales Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter by Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filterDate,\n          onChange: e => setFilterDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportSales,\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Export Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Sales:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 12\n        }, this), \" $\", totalSales.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sell Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sellProduct,\n        className: \"add-product-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"selectedProduct\",\n          value: selectedProduct,\n          onChange: e => {\n            setSelectedProduct(e.target.value);\n            setQuantity(1); // Reset quantity when product changes\n          },\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), products.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: product.id,\n            children: [product.name, \" (Price: $\", parseFloat(product.price).toFixed(2), \", Stock: \", product.stock, \")\"]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantity,\n          onChange: e => setQuantity(Math.min(Math.max(1, parseInt(e.target.value) || 1), maxQuantity)),\n          min: \"1\",\n          max: maxQuantity,\n          placeholder: \"Quantity\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sales Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: salesData.map((sale, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(sale.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sale.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sale.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(sale.amount).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, `M{sale.productId}-${sale.date}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"4gBWnI6Lqr/ANlrICan8Q08Y7pA=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Sales","products","initialProducts","_s","_products$find","salesData","setSalesData","totalSales","setTotalSales","filterDate","setFilterDate","selectedProduct","setSelectedProduct","quantity","setQuantity","setProducts","loading","setLoading","fetchSales","res","get","sales","data","total","reduce","sum","sale","parseFloat","amount","err","console","error","sellProduct","e","preventDefault","qty","parseInt","alert","product","find","p","id","stock","saleAmount","price","saleData","productId","name","date","Date","toISOString","split","post","updatedProducts","map","uiData","JSON","parse","localStorage","getItem","uiIndex","findIndex","push","setItem","stringify","prev","exportSales","csv","s","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","maxQuantity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","value","onChange","target","onClick","marginLeft","toFixed","onSubmit","required","Math","min","max","placeholder","index","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/wings-cafe/src/components/Sales.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api';\r\n\r\nfunction Sales({ products: initialProducts }) {\r\n  const [salesData, setSalesData] = useState([]);\r\n  const [totalSales, setTotalSales] = useState(0);\r\n  const [filterDate, setFilterDate] = useState('');\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [products, setProducts] = useState(initialProducts || []);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setProducts(initialProducts || []);\r\n    setLoading(false);\r\n  }, [initialProducts]);\r\n\r\n  const fetchSales = async () => {\r\n    try {\r\n      const res = await api.get('/sales' + (filterDate ? `?date=${filterDate}` : ''));\r\n      const sales = res.data || [];\r\n      setSalesData(sales);\r\n      const total = sales.reduce((sum, sale) => sum + parseFloat(sale.amount || 0), 0);\r\n      setTotalSales(total);\r\n    } catch (err) {\r\n      console.error('Error fetching sales:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSales();\r\n  }, [filterDate]);\r\n\r\n  const sellProduct = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const qty = parseInt(quantity, 10);\r\n    if (!selectedProduct || qty <= 0) {\r\n      alert('Please select a product and enter a valid quantity.');\r\n      return;\r\n    }\r\n\r\n    const product = products.find(p => p.id === selectedProduct);\r\n    if (!product || product.stock < qty) {\r\n      alert('Insufficient stock or invalid product.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const saleAmount = parseFloat(product.price) * qty;\r\n      const saleData = {\r\n        productId: selectedProduct,\r\n        name: product.name,\r\n        quantity: qty,\r\n        amount: saleAmount,\r\n        date: new Date().toISOString().split('T')[0], // Format: YYYY-MM-DD\r\n      };\r\n\r\n      await api.post('/sales', saleData);\r\n\r\n      // Update product stock in local state\r\n      const updatedProducts = products.map(p =>\r\n        p.id === selectedProduct ? { ...p, stock: p.stock - qty } : p\r\n      );\r\n      setProducts(updatedProducts);\r\n\r\n      // Update localStorage UI data\r\n      let uiData = JSON.parse(localStorage.getItem('uiData') || '[]');\r\n      const uiIndex = uiData.findIndex(p => p.id === selectedProduct);\r\n      if (uiIndex !== -1) {\r\n        uiData[uiIndex].stock -= qty;\r\n      } else {\r\n        uiData.push({ ...product, stock: product.stock - qty });\r\n      }\r\n      localStorage.setItem('uiData', JSON.stringify(uiData));\r\n\r\n      // Update sales state\r\n      setSalesData([...salesData, saleData]);\r\n      setTotalSales(prev => prev + saleAmount);\r\n      setQuantity(1);\r\n      setSelectedProduct('');\r\n    } catch (err) {\r\n      console.error('Error processing sale:', err);\r\n      alert('Failed to record sale. Please try again.');\r\n    }\r\n  };\r\n\r\n  const exportSales = () => {\r\n    const csv = [\r\n      ['Date', 'Product', 'Quantity', 'Amount'],\r\n      ...salesData.map(s => [s.date, s.name, s.quantity, s.amount].join(',')),\r\n    ].join('\\n');\r\n\r\n    const blob = new Blob([csv], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'sales.csv';\r\n    link.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const maxQuantity = selectedProduct\r\n    ? products.find(p => p.id === selectedProduct)?.stock || 0\r\n    : 0;\r\n\r\n  if (loading) return <div className=\"dashboard\">Loading sales...</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Sales Overview */}\r\n      <div className=\"card\">\r\n        <h3>Sales Overview</h3>\r\n        <div style={{ marginBottom: '15px' }}>\r\n          <label>Filter by Date: </label>\r\n          <input\r\n            type=\"date\"\r\n            value={filterDate}\r\n            onChange={(e) => setFilterDate(e.target.value)}\r\n          />\r\n          <button onClick={exportSales} style={{ marginLeft: '10px' }}>\r\n            Export Sales\r\n          </button>\r\n        </div>\r\n        <p><strong>Total Sales:</strong> ${totalSales.toFixed(2)}</p>\r\n      </div>\r\n\r\n      {/* Sell Product */}\r\n      <div className=\"card\">\r\n        <h3>Sell Product</h3>\r\n        <form onSubmit={sellProduct} className=\"add-product-form\">\r\n          <select\r\n            name=\"selectedProduct\"\r\n            value={selectedProduct}\r\n            onChange={(e) => {\r\n              setSelectedProduct(e.target.value);\r\n              setQuantity(1); // Reset quantity when product changes\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\">Select a Product</option>\r\n            {products.map(product => (\r\n              <option key={product.id} value={product.id}>\r\n                {product.name} (Price: ${parseFloat(product.price).toFixed(2)}, Stock: {product.stock})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={(e) =>\r\n              setQuantity(\r\n                Math.min(Math.max(1, parseInt(e.target.value) || 1), maxQuantity)\r\n              )\r\n            }\r\n            min=\"1\"\r\n            max={maxQuantity}\r\n            placeholder=\"Quantity\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Sell</button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Sales Transactions */}\r\n      <div className=\"card\">\r\n        <h3>Sales Transactions</h3>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Product</th>\r\n              <th>Quantity</th>\r\n              <th>Amount</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {salesData.map((sale, index) => (\r\n              <tr key={`M{sale.productId}-${sale.date}-${index}`}>\r\n                <td>{new Date(sale.date).toLocaleDateString()}</td>\r\n                <td>{sale.name}</td>\r\n                <td>{sale.quantity}</td>\r\n                <td>${parseFloat(sale.amount).toFixed(2)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,KAAKA,CAAC;EAAEC,QAAQ,EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,cAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACK,QAAQ,EAAEc,WAAW,CAAC,GAAGnB,QAAQ,CAACM,eAAe,IAAI,EAAE,CAAC;EAC/D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdoB,WAAW,CAACb,eAAe,IAAI,EAAE,CAAC;IAClCe,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACf,eAAe,CAAC,CAAC;EAErB,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMtB,GAAG,CAACuB,GAAG,CAAC,QAAQ,IAAIX,UAAU,GAAG,SAASA,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC;MAC/E,MAAMY,KAAK,GAAGF,GAAG,CAACG,IAAI,IAAI,EAAE;MAC5BhB,YAAY,CAACe,KAAK,CAAC;MACnB,MAAME,KAAK,GAAGF,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGE,UAAU,CAACD,IAAI,CAACE,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MAChFpB,aAAa,CAACe,KAAK,CAAC;IACtB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC7C;EACF,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACduB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAEhB,MAAMuB,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,GAAG,GAAGC,QAAQ,CAACvB,QAAQ,EAAE,EAAE,CAAC;IAClC,IAAI,CAACF,eAAe,IAAIwB,GAAG,IAAI,CAAC,EAAE;MAChCE,KAAK,CAAC,qDAAqD,CAAC;MAC5D;IACF;IAEA,MAAMC,OAAO,GAAGrC,QAAQ,CAACsC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAK9B,eAAe,CAAC;IAC5D,IAAI,CAAC2B,OAAO,IAAIA,OAAO,CAACI,KAAK,GAAGP,GAAG,EAAE;MACnCE,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACF;IAEA,IAAI;MACF,MAAMM,UAAU,GAAGhB,UAAU,CAACW,OAAO,CAACM,KAAK,CAAC,GAAGT,GAAG;MAClD,MAAMU,QAAQ,GAAG;QACfC,SAAS,EAAEnC,eAAe;QAC1BoC,IAAI,EAAET,OAAO,CAACS,IAAI;QAClBlC,QAAQ,EAAEsB,GAAG;QACbP,MAAM,EAAEe,UAAU;QAClBK,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;MAChD,CAAC;MAED,MAAMtD,GAAG,CAACuD,IAAI,CAAC,QAAQ,EAAEP,QAAQ,CAAC;;MAElC;MACA,MAAMQ,eAAe,GAAGpD,QAAQ,CAACqD,GAAG,CAACd,CAAC,IACpCA,CAAC,CAACC,EAAE,KAAK9B,eAAe,GAAG;QAAE,GAAG6B,CAAC;QAAEE,KAAK,EAAEF,CAAC,CAACE,KAAK,GAAGP;MAAI,CAAC,GAAGK,CAC9D,CAAC;MACDzB,WAAW,CAACsC,eAAe,CAAC;;MAE5B;MACA,IAAIE,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;MAC/D,MAAMC,OAAO,GAAGL,MAAM,CAACM,SAAS,CAACrB,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAK9B,eAAe,CAAC;MAC/D,IAAIiD,OAAO,KAAK,CAAC,CAAC,EAAE;QAClBL,MAAM,CAACK,OAAO,CAAC,CAAClB,KAAK,IAAIP,GAAG;MAC9B,CAAC,MAAM;QACLoB,MAAM,CAACO,IAAI,CAAC;UAAE,GAAGxB,OAAO;UAAEI,KAAK,EAAEJ,OAAO,CAACI,KAAK,GAAGP;QAAI,CAAC,CAAC;MACzD;MACAuB,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAEP,IAAI,CAACQ,SAAS,CAACT,MAAM,CAAC,CAAC;;MAEtD;MACAjD,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEwC,QAAQ,CAAC,CAAC;MACtCrC,aAAa,CAACyD,IAAI,IAAIA,IAAI,GAAGtB,UAAU,CAAC;MACxC7B,WAAW,CAAC,CAAC,CAAC;MACdF,kBAAkB,CAAC,EAAE,CAAC;IACxB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC5CQ,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;EAED,MAAM6B,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAG,CACV,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,EACzC,GAAG9D,SAAS,CAACiD,GAAG,CAACc,CAAC,IAAI,CAACA,CAAC,CAACpB,IAAI,EAAEoB,CAAC,CAACrB,IAAI,EAAEqB,CAAC,CAACvD,QAAQ,EAAEuD,CAAC,CAACxC,MAAM,CAAC,CAACyC,IAAI,CAAC,GAAG,CAAC,CAAC,CACxE,CAACA,IAAI,CAAC,IAAI,CAAC;IAEZ,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,GAAG,CAAC,EAAE;MAAEK,IAAI,EAAE;IAAW,CAAC,CAAC;IAClD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;IACfG,IAAI,CAACI,QAAQ,GAAG,WAAW;IAC3BJ,IAAI,CAACK,KAAK,CAAC,CAAC;IACZP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC;EAC1B,CAAC;EAED,MAAMU,WAAW,GAAGxE,eAAe,GAC/B,EAAAP,cAAA,GAAAH,QAAQ,CAACsC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAK9B,eAAe,CAAC,cAAAP,cAAA,uBAA5CA,cAAA,CAA8CsC,KAAK,KAAI,CAAC,GACxD,CAAC;EAEL,IAAI1B,OAAO,EAAE,oBAAOjB,OAAA;IAAKqF,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAErE,oBACE1F,OAAA;IAAKqF,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBtF,OAAA;MAAKqF,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBtF,OAAA;QAAAsF,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB1F,OAAA;QAAK2F,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAN,QAAA,gBACnCtF,OAAA;UAAAsF,QAAA,EAAO;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/B1F,OAAA;UACEyE,IAAI,EAAC,MAAM;UACXoB,KAAK,EAAEnF,UAAW;UAClBoF,QAAQ,EAAG5D,CAAC,IAAKvB,aAAa,CAACuB,CAAC,CAAC6D,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACF1F,OAAA;UAAQgG,OAAO,EAAE7B,WAAY;UAACwB,KAAK,EAAE;YAAEM,UAAU,EAAE;UAAO,CAAE;UAAAX,QAAA,EAAC;QAE7D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN1F,OAAA;QAAAsF,QAAA,gBAAGtF,OAAA;UAAAsF,QAAA,EAAQ;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,MAAE,EAAClF,UAAU,CAAC0F,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAGN1F,OAAA;MAAKqF,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBtF,OAAA;QAAAsF,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB1F,OAAA;QAAMmG,QAAQ,EAAElE,WAAY;QAACoD,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBACvDtF,OAAA;UACEgD,IAAI,EAAC,iBAAiB;UACtB6C,KAAK,EAAEjF,eAAgB;UACvBkF,QAAQ,EAAG5D,CAAC,IAAK;YACfrB,kBAAkB,CAACqB,CAAC,CAAC6D,MAAM,CAACF,KAAK,CAAC;YAClC9E,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;UAClB,CAAE;UACFqF,QAAQ;UAAAd,QAAA,gBAERtF,OAAA;YAAQ6F,KAAK,EAAC,EAAE;YAAAP,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACzCxF,QAAQ,CAACqD,GAAG,CAAChB,OAAO,iBACnBvC,OAAA;YAAyB6F,KAAK,EAAEtD,OAAO,CAACG,EAAG;YAAA4C,QAAA,GACxC/C,OAAO,CAACS,IAAI,EAAC,YAAU,EAACpB,UAAU,CAACW,OAAO,CAACM,KAAK,CAAC,CAACqD,OAAO,CAAC,CAAC,CAAC,EAAC,WAAS,EAAC3D,OAAO,CAACI,KAAK,EAAC,GACxF;UAAA,GAFaJ,OAAO,CAACG,EAAE;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEf,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACT1F,OAAA;UACEyE,IAAI,EAAC,QAAQ;UACboB,KAAK,EAAE/E,QAAS;UAChBgF,QAAQ,EAAG5D,CAAC,IACVnB,WAAW,CACTsF,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,EAAElE,QAAQ,CAACH,CAAC,CAAC6D,MAAM,CAACF,KAAK,CAAC,IAAI,CAAC,CAAC,EAAET,WAAW,CAClE,CACD;UACDkB,GAAG,EAAC,GAAG;UACPC,GAAG,EAAEnB,WAAY;UACjBoB,WAAW,EAAC,UAAU;UACtBJ,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACF1F,OAAA;UAAQyE,IAAI,EAAC,QAAQ;UAAAa,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGN1F,OAAA;MAAKqF,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBtF,OAAA;QAAAsF,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B1F,OAAA;QAAOqF,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACtBtF,OAAA;UAAAsF,QAAA,eACEtF,OAAA;YAAAsF,QAAA,gBACEtF,OAAA;cAAAsF,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACb1F,OAAA;cAAAsF,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChB1F,OAAA;cAAAsF,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjB1F,OAAA;cAAAsF,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR1F,OAAA;UAAAsF,QAAA,EACGhF,SAAS,CAACiD,GAAG,CAAC,CAAC5B,IAAI,EAAE8E,KAAK,kBACzBzG,OAAA;YAAAsF,QAAA,gBACEtF,OAAA;cAAAsF,QAAA,EAAK,IAAIpC,IAAI,CAACvB,IAAI,CAACsB,IAAI,CAAC,CAACyD,kBAAkB,CAAC;YAAC;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnD1F,OAAA;cAAAsF,QAAA,EAAK3D,IAAI,CAACqB;YAAI;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpB1F,OAAA;cAAAsF,QAAA,EAAK3D,IAAI,CAACb;YAAQ;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxB1F,OAAA;cAAAsF,QAAA,GAAI,GAAC,EAAC1D,UAAU,CAACD,IAAI,CAACE,MAAM,CAAC,CAACqE,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAJvC,qBAAqB/D,IAAI,CAACsB,IAAI,IAAIwD,KAAK,EAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAK9C,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtF,EAAA,CA3LQH,KAAK;AAAA0G,EAAA,GAAL1G,KAAK;AA6Ld,eAAeA,KAAK;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}